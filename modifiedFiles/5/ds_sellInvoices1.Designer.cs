//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Novin {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds_sellInvoices")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_sellInvoices : global::System.Data.DataSet {
        
        private viw_itemsSellDataTable tableviw_itemsSell;
        
        private tbl_accDocsDataTable tabletbl_accDocs;
        
        private tbl_itemsSellDataTable tabletbl_itemsSell;
        
        private tbl_invoicesSellDataTable tabletbl_invoicesSell;
        
        private global::System.Data.DataRelation relationFK_tbl_itemsSell_tbl_invoicesSell;
        
        private global::System.Data.DataRelation relationFK_tbl_invoicesSell_tbl_accDocs1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ds_sellInvoices() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ds_sellInvoices(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["viw_itemsSell"] != null)) {
                    base.Tables.Add(new viw_itemsSellDataTable(ds.Tables["viw_itemsSell"]));
                }
                if ((ds.Tables["tbl_accDocs"] != null)) {
                    base.Tables.Add(new tbl_accDocsDataTable(ds.Tables["tbl_accDocs"]));
                }
                if ((ds.Tables["tbl_itemsSell"] != null)) {
                    base.Tables.Add(new tbl_itemsSellDataTable(ds.Tables["tbl_itemsSell"]));
                }
                if ((ds.Tables["tbl_invoicesSell"] != null)) {
                    base.Tables.Add(new tbl_invoicesSellDataTable(ds.Tables["tbl_invoicesSell"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public viw_itemsSellDataTable viw_itemsSell {
            get {
                return this.tableviw_itemsSell;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbl_accDocsDataTable tbl_accDocs {
            get {
                return this.tabletbl_accDocs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbl_itemsSellDataTable tbl_itemsSell {
            get {
                return this.tabletbl_itemsSell;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbl_invoicesSellDataTable tbl_invoicesSell {
            get {
                return this.tabletbl_invoicesSell;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ds_sellInvoices cln = ((ds_sellInvoices)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["viw_itemsSell"] != null)) {
                    base.Tables.Add(new viw_itemsSellDataTable(ds.Tables["viw_itemsSell"]));
                }
                if ((ds.Tables["tbl_accDocs"] != null)) {
                    base.Tables.Add(new tbl_accDocsDataTable(ds.Tables["tbl_accDocs"]));
                }
                if ((ds.Tables["tbl_itemsSell"] != null)) {
                    base.Tables.Add(new tbl_itemsSellDataTable(ds.Tables["tbl_itemsSell"]));
                }
                if ((ds.Tables["tbl_invoicesSell"] != null)) {
                    base.Tables.Add(new tbl_invoicesSellDataTable(ds.Tables["tbl_invoicesSell"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableviw_itemsSell = ((viw_itemsSellDataTable)(base.Tables["viw_itemsSell"]));
            if ((initTable == true)) {
                if ((this.tableviw_itemsSell != null)) {
                    this.tableviw_itemsSell.InitVars();
                }
            }
            this.tabletbl_accDocs = ((tbl_accDocsDataTable)(base.Tables["tbl_accDocs"]));
            if ((initTable == true)) {
                if ((this.tabletbl_accDocs != null)) {
                    this.tabletbl_accDocs.InitVars();
                }
            }
            this.tabletbl_itemsSell = ((tbl_itemsSellDataTable)(base.Tables["tbl_itemsSell"]));
            if ((initTable == true)) {
                if ((this.tabletbl_itemsSell != null)) {
                    this.tabletbl_itemsSell.InitVars();
                }
            }
            this.tabletbl_invoicesSell = ((tbl_invoicesSellDataTable)(base.Tables["tbl_invoicesSell"]));
            if ((initTable == true)) {
                if ((this.tabletbl_invoicesSell != null)) {
                    this.tabletbl_invoicesSell.InitVars();
                }
            }
            this.relationFK_tbl_itemsSell_tbl_invoicesSell = this.Relations["FK_tbl_itemsSell_tbl_invoicesSell"];
            this.relationFK_tbl_invoicesSell_tbl_accDocs1 = this.Relations["FK_tbl_invoicesSell_tbl_accDocs1"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ds_sellInvoices";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds_sellInvoices.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableviw_itemsSell = new viw_itemsSellDataTable();
            base.Tables.Add(this.tableviw_itemsSell);
            this.tabletbl_accDocs = new tbl_accDocsDataTable();
            base.Tables.Add(this.tabletbl_accDocs);
            this.tabletbl_itemsSell = new tbl_itemsSellDataTable();
            base.Tables.Add(this.tabletbl_itemsSell);
            this.tabletbl_invoicesSell = new tbl_invoicesSellDataTable();
            base.Tables.Add(this.tabletbl_invoicesSell);
            this.relationFK_tbl_itemsSell_tbl_invoicesSell = new global::System.Data.DataRelation("FK_tbl_itemsSell_tbl_invoicesSell", new global::System.Data.DataColumn[] {
                        this.tabletbl_invoicesSell.invoiceSell_idColumn,
                        this.tabletbl_invoicesSell.invoiceSell_kindColumn}, new global::System.Data.DataColumn[] {
                        this.tabletbl_itemsSell.invoiceSell_idColumn,
                        this.tabletbl_itemsSell.invoiceSell_kindColumn}, false);
            this.Relations.Add(this.relationFK_tbl_itemsSell_tbl_invoicesSell);
            this.relationFK_tbl_invoicesSell_tbl_accDocs1 = new global::System.Data.DataRelation("FK_tbl_invoicesSell_tbl_accDocs1", new global::System.Data.DataColumn[] {
                        this.tabletbl_accDocs.accDoc_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletbl_invoicesSell.accDoc_idColumn}, false);
            this.Relations.Add(this.relationFK_tbl_invoicesSell_tbl_accDocs1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeviw_itemsSell() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbl_accDocs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbl_itemsSell() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbl_invoicesSell() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_sellInvoices ds = new ds_sellInvoices();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void viw_itemsSellRowChangeEventHandler(object sender, viw_itemsSellRowChangeEvent e);
        
        public delegate void tbl_accDocsRowChangeEventHandler(object sender, tbl_accDocsRowChangeEvent e);
        
        public delegate void tbl_itemsSellRowChangeEventHandler(object sender, tbl_itemsSellRowChangeEvent e);
        
        public delegate void tbl_invoicesSellRowChangeEventHandler(object sender, tbl_invoicesSellRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class viw_itemsSellDataTable : global::System.Data.TypedTableBase<viw_itemsSellRow> {
            
            private global::System.Data.DataColumn columninvoiceSell_id;
            
            private global::System.Data.DataColumn columnobject_title;
            
            private global::System.Data.DataColumn columnobjectUnit_title;
            
            private global::System.Data.DataColumn columnitemSell_unitCount;
            
            private global::System.Data.DataColumn columnitemSell_retailCount;
            
            private global::System.Data.DataColumn columnobject_retailInUnit;
            
            private global::System.Data.DataColumn columnitemSell_retailPrice;
            
            private global::System.Data.DataColumn columnitemSell_discountPercent;
            
            private global::System.Data.DataColumn columnitemSell_taxPercent;
            
            private global::System.Data.DataColumn columnitemSell_comment;
            
            private global::System.Data.DataColumn columnobjectTotalCount;
            
            private global::System.Data.DataColumn columnobjectTotalPrice;
            
            private global::System.Data.DataColumn columnitemSell_visitorPercent;
            
            private global::System.Data.DataColumn columninvoiceSell_kind;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsSellDataTable() {
                this.TableName = "viw_itemsSell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal viw_itemsSellDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected viw_itemsSellDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceSell_idColumn {
                get {
                    return this.columninvoiceSell_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_titleColumn {
                get {
                    return this.columnobject_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn objectUnit_titleColumn {
                get {
                    return this.columnobjectUnit_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_unitCountColumn {
                get {
                    return this.columnitemSell_unitCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_retailCountColumn {
                get {
                    return this.columnitemSell_retailCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_retailInUnitColumn {
                get {
                    return this.columnobject_retailInUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_retailPriceColumn {
                get {
                    return this.columnitemSell_retailPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_discountPercentColumn {
                get {
                    return this.columnitemSell_discountPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_taxPercentColumn {
                get {
                    return this.columnitemSell_taxPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_commentColumn {
                get {
                    return this.columnitemSell_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn objectTotalCountColumn {
                get {
                    return this.columnobjectTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn objectTotalPriceColumn {
                get {
                    return this.columnobjectTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_visitorPercentColumn {
                get {
                    return this.columnitemSell_visitorPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceSell_kindColumn {
                get {
                    return this.columninvoiceSell_kind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsSellRow this[int index] {
                get {
                    return ((viw_itemsSellRow)(this.Rows[index]));
                }
            }
            
            public event viw_itemsSellRowChangeEventHandler viw_itemsSellRowChanging;
            
            public event viw_itemsSellRowChangeEventHandler viw_itemsSellRowChanged;
            
            public event viw_itemsSellRowChangeEventHandler viw_itemsSellRowDeleting;
            
            public event viw_itemsSellRowChangeEventHandler viw_itemsSellRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addviw_itemsSellRow(viw_itemsSellRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsSellRow Addviw_itemsSellRow(int invoiceSell_id, string object_title, string objectUnit_title, int itemSell_unitCount, long itemSell_retailCount, int object_retailInUnit, long itemSell_retailPrice, short itemSell_discountPercent, long itemSell_taxPercent, string itemSell_comment, long objectTotalCount, long objectTotalPrice, short itemSell_visitorPercent, bool invoiceSell_kind) {
                viw_itemsSellRow rowviw_itemsSellRow = ((viw_itemsSellRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        invoiceSell_id,
                        object_title,
                        objectUnit_title,
                        itemSell_unitCount,
                        itemSell_retailCount,
                        object_retailInUnit,
                        itemSell_retailPrice,
                        itemSell_discountPercent,
                        itemSell_taxPercent,
                        itemSell_comment,
                        objectTotalCount,
                        objectTotalPrice,
                        itemSell_visitorPercent,
                        invoiceSell_kind};
                rowviw_itemsSellRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowviw_itemsSellRow);
                return rowviw_itemsSellRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                viw_itemsSellDataTable cln = ((viw_itemsSellDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new viw_itemsSellDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columninvoiceSell_id = base.Columns["invoiceSell_id"];
                this.columnobject_title = base.Columns["object_title"];
                this.columnobjectUnit_title = base.Columns["objectUnit_title"];
                this.columnitemSell_unitCount = base.Columns["itemSell_unitCount"];
                this.columnitemSell_retailCount = base.Columns["itemSell_retailCount"];
                this.columnobject_retailInUnit = base.Columns["object_retailInUnit"];
                this.columnitemSell_retailPrice = base.Columns["itemSell_retailPrice"];
                this.columnitemSell_discountPercent = base.Columns["itemSell_discountPercent"];
                this.columnitemSell_taxPercent = base.Columns["itemSell_taxPercent"];
                this.columnitemSell_comment = base.Columns["itemSell_comment"];
                this.columnobjectTotalCount = base.Columns["objectTotalCount"];
                this.columnobjectTotalPrice = base.Columns["objectTotalPrice"];
                this.columnitemSell_visitorPercent = base.Columns["itemSell_visitorPercent"];
                this.columninvoiceSell_kind = base.Columns["invoiceSell_kind"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columninvoiceSell_id = new global::System.Data.DataColumn("invoiceSell_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceSell_id);
                this.columnobject_title = new global::System.Data.DataColumn("object_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_title);
                this.columnobjectUnit_title = new global::System.Data.DataColumn("objectUnit_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectUnit_title);
                this.columnitemSell_unitCount = new global::System.Data.DataColumn("itemSell_unitCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_unitCount);
                this.columnitemSell_retailCount = new global::System.Data.DataColumn("itemSell_retailCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_retailCount);
                this.columnobject_retailInUnit = new global::System.Data.DataColumn("object_retailInUnit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_retailInUnit);
                this.columnitemSell_retailPrice = new global::System.Data.DataColumn("itemSell_retailPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_retailPrice);
                this.columnitemSell_discountPercent = new global::System.Data.DataColumn("itemSell_discountPercent", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_discountPercent);
                this.columnitemSell_taxPercent = new global::System.Data.DataColumn("itemSell_taxPercent", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_taxPercent);
                this.columnitemSell_comment = new global::System.Data.DataColumn("itemSell_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_comment);
                this.columnobjectTotalCount = new global::System.Data.DataColumn("objectTotalCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectTotalCount);
                this.columnobjectTotalPrice = new global::System.Data.DataColumn("objectTotalPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectTotalPrice);
                this.columnitemSell_visitorPercent = new global::System.Data.DataColumn("itemSell_visitorPercent", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_visitorPercent);
                this.columninvoiceSell_kind = new global::System.Data.DataColumn("invoiceSell_kind", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceSell_kind);
                this.columninvoiceSell_id.AllowDBNull = false;
                this.columnobject_title.AllowDBNull = false;
                this.columnobject_title.MaxLength = 50;
                this.columnobjectUnit_title.AllowDBNull = false;
                this.columnobjectUnit_title.MaxLength = 50;
                this.columnitemSell_unitCount.AllowDBNull = false;
                this.columnitemSell_retailCount.AllowDBNull = false;
                this.columnobject_retailInUnit.AllowDBNull = false;
                this.columnitemSell_retailPrice.AllowDBNull = false;
                this.columnitemSell_discountPercent.AllowDBNull = false;
                this.columnitemSell_comment.MaxLength = 100;
                this.columnobjectTotalCount.ReadOnly = true;
                this.columnobjectTotalPrice.ReadOnly = true;
                this.columnitemSell_visitorPercent.AllowDBNull = false;
                this.columninvoiceSell_kind.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsSellRow Newviw_itemsSellRow() {
                return ((viw_itemsSellRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new viw_itemsSellRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(viw_itemsSellRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.viw_itemsSellRowChanged != null)) {
                    this.viw_itemsSellRowChanged(this, new viw_itemsSellRowChangeEvent(((viw_itemsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.viw_itemsSellRowChanging != null)) {
                    this.viw_itemsSellRowChanging(this, new viw_itemsSellRowChangeEvent(((viw_itemsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.viw_itemsSellRowDeleted != null)) {
                    this.viw_itemsSellRowDeleted(this, new viw_itemsSellRowChangeEvent(((viw_itemsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.viw_itemsSellRowDeleting != null)) {
                    this.viw_itemsSellRowDeleting(this, new viw_itemsSellRowChangeEvent(((viw_itemsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeviw_itemsSellRow(viw_itemsSellRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_sellInvoices ds = new ds_sellInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "viw_itemsSellDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbl_accDocsDataTable : global::System.Data.TypedTableBase<tbl_accDocsRow> {
            
            private global::System.Data.DataColumn columnaccDoc_id;
            
            private global::System.Data.DataColumn columnaccDoc_price;
            
            private global::System.Data.DataColumn columnaccDoc_date;
            
            private global::System.Data.DataColumn columnaccDoc_comment;
            
            private global::System.Data.DataColumn columnaccDoc_isItPerm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsDataTable() {
                this.TableName = "tbl_accDocs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_accDocsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbl_accDocsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_idColumn {
                get {
                    return this.columnaccDoc_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_priceColumn {
                get {
                    return this.columnaccDoc_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_dateColumn {
                get {
                    return this.columnaccDoc_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_commentColumn {
                get {
                    return this.columnaccDoc_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_isItPermColumn {
                get {
                    return this.columnaccDoc_isItPerm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow this[int index] {
                get {
                    return ((tbl_accDocsRow)(this.Rows[index]));
                }
            }
            
            public event tbl_accDocsRowChangeEventHandler tbl_accDocsRowChanging;
            
            public event tbl_accDocsRowChangeEventHandler tbl_accDocsRowChanged;
            
            public event tbl_accDocsRowChangeEventHandler tbl_accDocsRowDeleting;
            
            public event tbl_accDocsRowChangeEventHandler tbl_accDocsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtbl_accDocsRow(tbl_accDocsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow Addtbl_accDocsRow(int accDoc_id, long accDoc_price, string accDoc_date, string accDoc_comment, bool accDoc_isItPerm) {
                tbl_accDocsRow rowtbl_accDocsRow = ((tbl_accDocsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        accDoc_id,
                        accDoc_price,
                        accDoc_date,
                        accDoc_comment,
                        accDoc_isItPerm};
                rowtbl_accDocsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbl_accDocsRow);
                return rowtbl_accDocsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow FindByaccDoc_id(int accDoc_id) {
                return ((tbl_accDocsRow)(this.Rows.Find(new object[] {
                            accDoc_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbl_accDocsDataTable cln = ((tbl_accDocsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbl_accDocsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnaccDoc_id = base.Columns["accDoc_id"];
                this.columnaccDoc_price = base.Columns["accDoc_price"];
                this.columnaccDoc_date = base.Columns["accDoc_date"];
                this.columnaccDoc_comment = base.Columns["accDoc_comment"];
                this.columnaccDoc_isItPerm = base.Columns["accDoc_isItPerm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnaccDoc_id = new global::System.Data.DataColumn("accDoc_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_id);
                this.columnaccDoc_price = new global::System.Data.DataColumn("accDoc_price", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_price);
                this.columnaccDoc_date = new global::System.Data.DataColumn("accDoc_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_date);
                this.columnaccDoc_comment = new global::System.Data.DataColumn("accDoc_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_comment);
                this.columnaccDoc_isItPerm = new global::System.Data.DataColumn("accDoc_isItPerm", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_isItPerm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnaccDoc_id}, true));
                this.columnaccDoc_id.AllowDBNull = false;
                this.columnaccDoc_id.Unique = true;
                this.columnaccDoc_price.AllowDBNull = false;
                this.columnaccDoc_date.AllowDBNull = false;
                this.columnaccDoc_date.MaxLength = 50;
                this.columnaccDoc_comment.MaxLength = 150;
                this.columnaccDoc_isItPerm.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow Newtbl_accDocsRow() {
                return ((tbl_accDocsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbl_accDocsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbl_accDocsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbl_accDocsRowChanged != null)) {
                    this.tbl_accDocsRowChanged(this, new tbl_accDocsRowChangeEvent(((tbl_accDocsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbl_accDocsRowChanging != null)) {
                    this.tbl_accDocsRowChanging(this, new tbl_accDocsRowChangeEvent(((tbl_accDocsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbl_accDocsRowDeleted != null)) {
                    this.tbl_accDocsRowDeleted(this, new tbl_accDocsRowChangeEvent(((tbl_accDocsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbl_accDocsRowDeleting != null)) {
                    this.tbl_accDocsRowDeleting(this, new tbl_accDocsRowChangeEvent(((tbl_accDocsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetbl_accDocsRow(tbl_accDocsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_sellInvoices ds = new ds_sellInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbl_accDocsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbl_itemsSellDataTable : global::System.Data.TypedTableBase<tbl_itemsSellRow> {
            
            private global::System.Data.DataColumn columnitemSell_id;
            
            private global::System.Data.DataColumn columninvoiceSell_id;
            
            private global::System.Data.DataColumn columninvoiceSell_kind;
            
            private global::System.Data.DataColumn columnobject_id;
            
            private global::System.Data.DataColumn columnitemSell_unitCount;
            
            private global::System.Data.DataColumn columnitemSell_retailCount;
            
            private global::System.Data.DataColumn columnitemSell_retailPrice;
            
            private global::System.Data.DataColumn columnitemSell_totalPrice;
            
            private global::System.Data.DataColumn columnitemSell_discountPercent;
            
            private global::System.Data.DataColumn columnitemSell_visitorPercent;
            
            private global::System.Data.DataColumn columnitemSell_transportPrice;
            
            private global::System.Data.DataColumn columnitemSell_taxPercent;
            
            private global::System.Data.DataColumn columnitemSell_comment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsSellDataTable() {
                this.TableName = "tbl_itemsSell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_itemsSellDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbl_itemsSellDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_idColumn {
                get {
                    return this.columnitemSell_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceSell_idColumn {
                get {
                    return this.columninvoiceSell_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceSell_kindColumn {
                get {
                    return this.columninvoiceSell_kind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_idColumn {
                get {
                    return this.columnobject_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_unitCountColumn {
                get {
                    return this.columnitemSell_unitCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_retailCountColumn {
                get {
                    return this.columnitemSell_retailCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_retailPriceColumn {
                get {
                    return this.columnitemSell_retailPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_totalPriceColumn {
                get {
                    return this.columnitemSell_totalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_discountPercentColumn {
                get {
                    return this.columnitemSell_discountPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_visitorPercentColumn {
                get {
                    return this.columnitemSell_visitorPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_transportPriceColumn {
                get {
                    return this.columnitemSell_transportPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_taxPercentColumn {
                get {
                    return this.columnitemSell_taxPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemSell_commentColumn {
                get {
                    return this.columnitemSell_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsSellRow this[int index] {
                get {
                    return ((tbl_itemsSellRow)(this.Rows[index]));
                }
            }
            
            public event tbl_itemsSellRowChangeEventHandler tbl_itemsSellRowChanging;
            
            public event tbl_itemsSellRowChangeEventHandler tbl_itemsSellRowChanged;
            
            public event tbl_itemsSellRowChangeEventHandler tbl_itemsSellRowDeleting;
            
            public event tbl_itemsSellRowChangeEventHandler tbl_itemsSellRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtbl_itemsSellRow(tbl_itemsSellRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsSellRow Addtbl_itemsSellRow(int invoiceSell_id, bool invoiceSell_kind, int object_id, int itemSell_unitCount, long itemSell_retailCount, long itemSell_retailPrice, long itemSell_totalPrice, short itemSell_discountPercent, short itemSell_visitorPercent, long itemSell_transportPrice, long itemSell_taxPercent, string itemSell_comment) {
                tbl_itemsSellRow rowtbl_itemsSellRow = ((tbl_itemsSellRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        invoiceSell_id,
                        invoiceSell_kind,
                        object_id,
                        itemSell_unitCount,
                        itemSell_retailCount,
                        itemSell_retailPrice,
                        itemSell_totalPrice,
                        itemSell_discountPercent,
                        itemSell_visitorPercent,
                        itemSell_transportPrice,
                        itemSell_taxPercent,
                        itemSell_comment};
                rowtbl_itemsSellRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbl_itemsSellRow);
                return rowtbl_itemsSellRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsSellRow FindByitemSell_id(int itemSell_id) {
                return ((tbl_itemsSellRow)(this.Rows.Find(new object[] {
                            itemSell_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbl_itemsSellDataTable cln = ((tbl_itemsSellDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbl_itemsSellDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnitemSell_id = base.Columns["itemSell_id"];
                this.columninvoiceSell_id = base.Columns["invoiceSell_id"];
                this.columninvoiceSell_kind = base.Columns["invoiceSell_kind"];
                this.columnobject_id = base.Columns["object_id"];
                this.columnitemSell_unitCount = base.Columns["itemSell_unitCount"];
                this.columnitemSell_retailCount = base.Columns["itemSell_retailCount"];
                this.columnitemSell_retailPrice = base.Columns["itemSell_retailPrice"];
                this.columnitemSell_totalPrice = base.Columns["itemSell_totalPrice"];
                this.columnitemSell_discountPercent = base.Columns["itemSell_discountPercent"];
                this.columnitemSell_visitorPercent = base.Columns["itemSell_visitorPercent"];
                this.columnitemSell_transportPrice = base.Columns["itemSell_transportPrice"];
                this.columnitemSell_taxPercent = base.Columns["itemSell_taxPercent"];
                this.columnitemSell_comment = base.Columns["itemSell_comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnitemSell_id = new global::System.Data.DataColumn("itemSell_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_id);
                this.columninvoiceSell_id = new global::System.Data.DataColumn("invoiceSell_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceSell_id);
                this.columninvoiceSell_kind = new global::System.Data.DataColumn("invoiceSell_kind", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceSell_kind);
                this.columnobject_id = new global::System.Data.DataColumn("object_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_id);
                this.columnitemSell_unitCount = new global::System.Data.DataColumn("itemSell_unitCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_unitCount);
                this.columnitemSell_retailCount = new global::System.Data.DataColumn("itemSell_retailCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_retailCount);
                this.columnitemSell_retailPrice = new global::System.Data.DataColumn("itemSell_retailPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_retailPrice);
                this.columnitemSell_totalPrice = new global::System.Data.DataColumn("itemSell_totalPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_totalPrice);
                this.columnitemSell_discountPercent = new global::System.Data.DataColumn("itemSell_discountPercent", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_discountPercent);
                this.columnitemSell_visitorPercent = new global::System.Data.DataColumn("itemSell_visitorPercent", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_visitorPercent);
                this.columnitemSell_transportPrice = new global::System.Data.DataColumn("itemSell_transportPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_transportPrice);
                this.columnitemSell_taxPercent = new global::System.Data.DataColumn("itemSell_taxPercent", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_taxPercent);
                this.columnitemSell_comment = new global::System.Data.DataColumn("itemSell_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemSell_comment);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnitemSell_id}, true));
                this.columnitemSell_id.AutoIncrement = true;
                this.columnitemSell_id.AutoIncrementSeed = 1;
                this.columnitemSell_id.AllowDBNull = false;
                this.columnitemSell_id.ReadOnly = true;
                this.columnitemSell_id.Unique = true;
                this.columninvoiceSell_id.AllowDBNull = false;
                this.columninvoiceSell_kind.AllowDBNull = false;
                this.columnobject_id.AllowDBNull = false;
                this.columnitemSell_unitCount.AllowDBNull = false;
                this.columnitemSell_retailCount.AllowDBNull = false;
                this.columnitemSell_retailPrice.AllowDBNull = false;
                this.columnitemSell_totalPrice.AllowDBNull = false;
                this.columnitemSell_discountPercent.AllowDBNull = false;
                this.columnitemSell_visitorPercent.AllowDBNull = false;
                this.columnitemSell_transportPrice.AllowDBNull = false;
                this.columnitemSell_comment.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsSellRow Newtbl_itemsSellRow() {
                return ((tbl_itemsSellRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbl_itemsSellRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbl_itemsSellRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbl_itemsSellRowChanged != null)) {
                    this.tbl_itemsSellRowChanged(this, new tbl_itemsSellRowChangeEvent(((tbl_itemsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbl_itemsSellRowChanging != null)) {
                    this.tbl_itemsSellRowChanging(this, new tbl_itemsSellRowChangeEvent(((tbl_itemsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbl_itemsSellRowDeleted != null)) {
                    this.tbl_itemsSellRowDeleted(this, new tbl_itemsSellRowChangeEvent(((tbl_itemsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbl_itemsSellRowDeleting != null)) {
                    this.tbl_itemsSellRowDeleting(this, new tbl_itemsSellRowChangeEvent(((tbl_itemsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetbl_itemsSellRow(tbl_itemsSellRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_sellInvoices ds = new ds_sellInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbl_itemsSellDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbl_invoicesSellDataTable : global::System.Data.TypedTableBase<tbl_invoicesSellRow> {
            
            private global::System.Data.DataColumn columninvoiceSell_id;
            
            private global::System.Data.DataColumn columninvoiceSell_kind;
            
            private global::System.Data.DataColumn columnperson_id;
            
            private global::System.Data.DataColumn columnaccDoc_id;
            
            private global::System.Data.DataColumn columninvoiceSell_date;
            
            private global::System.Data.DataColumn columninvoiceSell_totalPrice;
            
            private global::System.Data.DataColumn columninvoiceSell_comment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesSellDataTable() {
                this.TableName = "tbl_invoicesSell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_invoicesSellDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbl_invoicesSellDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceSell_idColumn {
                get {
                    return this.columninvoiceSell_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceSell_kindColumn {
                get {
                    return this.columninvoiceSell_kind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn person_idColumn {
                get {
                    return this.columnperson_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_idColumn {
                get {
                    return this.columnaccDoc_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceSell_dateColumn {
                get {
                    return this.columninvoiceSell_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceSell_totalPriceColumn {
                get {
                    return this.columninvoiceSell_totalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceSell_commentColumn {
                get {
                    return this.columninvoiceSell_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesSellRow this[int index] {
                get {
                    return ((tbl_invoicesSellRow)(this.Rows[index]));
                }
            }
            
            public event tbl_invoicesSellRowChangeEventHandler tbl_invoicesSellRowChanging;
            
            public event tbl_invoicesSellRowChangeEventHandler tbl_invoicesSellRowChanged;
            
            public event tbl_invoicesSellRowChangeEventHandler tbl_invoicesSellRowDeleting;
            
            public event tbl_invoicesSellRowChangeEventHandler tbl_invoicesSellRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtbl_invoicesSellRow(tbl_invoicesSellRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesSellRow Addtbl_invoicesSellRow(int invoiceSell_id, bool invoiceSell_kind, int person_id, tbl_accDocsRow parenttbl_accDocsRowByFK_tbl_invoicesSell_tbl_accDocs1, string invoiceSell_date, long invoiceSell_totalPrice, string invoiceSell_comment) {
                tbl_invoicesSellRow rowtbl_invoicesSellRow = ((tbl_invoicesSellRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        invoiceSell_id,
                        invoiceSell_kind,
                        person_id,
                        null,
                        invoiceSell_date,
                        invoiceSell_totalPrice,
                        invoiceSell_comment};
                if ((parenttbl_accDocsRowByFK_tbl_invoicesSell_tbl_accDocs1 != null)) {
                    columnValuesArray[3] = parenttbl_accDocsRowByFK_tbl_invoicesSell_tbl_accDocs1[0];
                }
                rowtbl_invoicesSellRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbl_invoicesSellRow);
                return rowtbl_invoicesSellRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesSellRow FindByinvoiceSell_idinvoiceSell_kind(int invoiceSell_id, bool invoiceSell_kind) {
                return ((tbl_invoicesSellRow)(this.Rows.Find(new object[] {
                            invoiceSell_id,
                            invoiceSell_kind})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbl_invoicesSellDataTable cln = ((tbl_invoicesSellDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbl_invoicesSellDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columninvoiceSell_id = base.Columns["invoiceSell_id"];
                this.columninvoiceSell_kind = base.Columns["invoiceSell_kind"];
                this.columnperson_id = base.Columns["person_id"];
                this.columnaccDoc_id = base.Columns["accDoc_id"];
                this.columninvoiceSell_date = base.Columns["invoiceSell_date"];
                this.columninvoiceSell_totalPrice = base.Columns["invoiceSell_totalPrice"];
                this.columninvoiceSell_comment = base.Columns["invoiceSell_comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columninvoiceSell_id = new global::System.Data.DataColumn("invoiceSell_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceSell_id);
                this.columninvoiceSell_kind = new global::System.Data.DataColumn("invoiceSell_kind", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceSell_kind);
                this.columnperson_id = new global::System.Data.DataColumn("person_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperson_id);
                this.columnaccDoc_id = new global::System.Data.DataColumn("accDoc_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_id);
                this.columninvoiceSell_date = new global::System.Data.DataColumn("invoiceSell_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceSell_date);
                this.columninvoiceSell_totalPrice = new global::System.Data.DataColumn("invoiceSell_totalPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceSell_totalPrice);
                this.columninvoiceSell_comment = new global::System.Data.DataColumn("invoiceSell_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceSell_comment);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columninvoiceSell_id,
                                this.columninvoiceSell_kind}, true));
                this.columninvoiceSell_id.AllowDBNull = false;
                this.columninvoiceSell_kind.AllowDBNull = false;
                this.columnperson_id.AllowDBNull = false;
                this.columnaccDoc_id.AllowDBNull = false;
                this.columninvoiceSell_date.AllowDBNull = false;
                this.columninvoiceSell_date.MaxLength = 10;
                this.columninvoiceSell_totalPrice.AllowDBNull = false;
                this.columninvoiceSell_comment.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesSellRow Newtbl_invoicesSellRow() {
                return ((tbl_invoicesSellRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbl_invoicesSellRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbl_invoicesSellRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbl_invoicesSellRowChanged != null)) {
                    this.tbl_invoicesSellRowChanged(this, new tbl_invoicesSellRowChangeEvent(((tbl_invoicesSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbl_invoicesSellRowChanging != null)) {
                    this.tbl_invoicesSellRowChanging(this, new tbl_invoicesSellRowChangeEvent(((tbl_invoicesSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbl_invoicesSellRowDeleted != null)) {
                    this.tbl_invoicesSellRowDeleted(this, new tbl_invoicesSellRowChangeEvent(((tbl_invoicesSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbl_invoicesSellRowDeleting != null)) {
                    this.tbl_invoicesSellRowDeleting(this, new tbl_invoicesSellRowChangeEvent(((tbl_invoicesSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetbl_invoicesSellRow(tbl_invoicesSellRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_sellInvoices ds = new ds_sellInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbl_invoicesSellDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class viw_itemsSellRow : global::System.Data.DataRow {
            
            private viw_itemsSellDataTable tableviw_itemsSell;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal viw_itemsSellRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableviw_itemsSell = ((viw_itemsSellDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int invoiceSell_id {
                get {
                    return ((int)(this[this.tableviw_itemsSell.invoiceSell_idColumn]));
                }
                set {
                    this[this.tableviw_itemsSell.invoiceSell_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string object_title {
                get {
                    return ((string)(this[this.tableviw_itemsSell.object_titleColumn]));
                }
                set {
                    this[this.tableviw_itemsSell.object_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string objectUnit_title {
                get {
                    return ((string)(this[this.tableviw_itemsSell.objectUnit_titleColumn]));
                }
                set {
                    this[this.tableviw_itemsSell.objectUnit_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int itemSell_unitCount {
                get {
                    return ((int)(this[this.tableviw_itemsSell.itemSell_unitCountColumn]));
                }
                set {
                    this[this.tableviw_itemsSell.itemSell_unitCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long itemSell_retailCount {
                get {
                    return ((long)(this[this.tableviw_itemsSell.itemSell_retailCountColumn]));
                }
                set {
                    this[this.tableviw_itemsSell.itemSell_retailCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int object_retailInUnit {
                get {
                    return ((int)(this[this.tableviw_itemsSell.object_retailInUnitColumn]));
                }
                set {
                    this[this.tableviw_itemsSell.object_retailInUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long itemSell_retailPrice {
                get {
                    return ((long)(this[this.tableviw_itemsSell.itemSell_retailPriceColumn]));
                }
                set {
                    this[this.tableviw_itemsSell.itemSell_retailPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short itemSell_discountPercent {
                get {
                    return ((short)(this[this.tableviw_itemsSell.itemSell_discountPercentColumn]));
                }
                set {
                    this[this.tableviw_itemsSell.itemSell_discountPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long itemSell_taxPercent {
                get {
                    try {
                        return ((long)(this[this.tableviw_itemsSell.itemSell_taxPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'itemSell_taxPercent\' in table \'viw_itemsSell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviw_itemsSell.itemSell_taxPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string itemSell_comment {
                get {
                    try {
                        return ((string)(this[this.tableviw_itemsSell.itemSell_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'itemSell_comment\' in table \'viw_itemsSell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviw_itemsSell.itemSell_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long objectTotalCount {
                get {
                    try {
                        return ((long)(this[this.tableviw_itemsSell.objectTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'objectTotalCount\' in table \'viw_itemsSell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviw_itemsSell.objectTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long objectTotalPrice {
                get {
                    try {
                        return ((long)(this[this.tableviw_itemsSell.objectTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'objectTotalPrice\' in table \'viw_itemsSell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviw_itemsSell.objectTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short itemSell_visitorPercent {
                get {
                    return ((short)(this[this.tableviw_itemsSell.itemSell_visitorPercentColumn]));
                }
                set {
                    this[this.tableviw_itemsSell.itemSell_visitorPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool invoiceSell_kind {
                get {
                    return ((bool)(this[this.tableviw_itemsSell.invoiceSell_kindColumn]));
                }
                set {
                    this[this.tableviw_itemsSell.invoiceSell_kindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemSell_taxPercentNull() {
                return this.IsNull(this.tableviw_itemsSell.itemSell_taxPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemSell_taxPercentNull() {
                this[this.tableviw_itemsSell.itemSell_taxPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemSell_commentNull() {
                return this.IsNull(this.tableviw_itemsSell.itemSell_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemSell_commentNull() {
                this[this.tableviw_itemsSell.itemSell_commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjectTotalCountNull() {
                return this.IsNull(this.tableviw_itemsSell.objectTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjectTotalCountNull() {
                this[this.tableviw_itemsSell.objectTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjectTotalPriceNull() {
                return this.IsNull(this.tableviw_itemsSell.objectTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjectTotalPriceNull() {
                this[this.tableviw_itemsSell.objectTotalPriceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbl_accDocsRow : global::System.Data.DataRow {
            
            private tbl_accDocsDataTable tabletbl_accDocs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_accDocsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbl_accDocs = ((tbl_accDocsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int accDoc_id {
                get {
                    return ((int)(this[this.tabletbl_accDocs.accDoc_idColumn]));
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long accDoc_price {
                get {
                    return ((long)(this[this.tabletbl_accDocs.accDoc_priceColumn]));
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accDoc_date {
                get {
                    return ((string)(this[this.tabletbl_accDocs.accDoc_dateColumn]));
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accDoc_comment {
                get {
                    try {
                        return ((string)(this[this.tabletbl_accDocs.accDoc_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accDoc_comment\' in table \'tbl_accDocs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool accDoc_isItPerm {
                get {
                    return ((bool)(this[this.tabletbl_accDocs.accDoc_isItPermColumn]));
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_isItPermColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccDoc_commentNull() {
                return this.IsNull(this.tabletbl_accDocs.accDoc_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccDoc_commentNull() {
                this[this.tabletbl_accDocs.accDoc_commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesSellRow[] Gettbl_invoicesSellRows() {
                if ((this.Table.ChildRelations["FK_tbl_invoicesSell_tbl_accDocs1"] == null)) {
                    return new tbl_invoicesSellRow[0];
                }
                else {
                    return ((tbl_invoicesSellRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tbl_invoicesSell_tbl_accDocs1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbl_itemsSellRow : global::System.Data.DataRow {
            
            private tbl_itemsSellDataTable tabletbl_itemsSell;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_itemsSellRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbl_itemsSell = ((tbl_itemsSellDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int itemSell_id {
                get {
                    return ((int)(this[this.tabletbl_itemsSell.itemSell_idColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.itemSell_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int invoiceSell_id {
                get {
                    return ((int)(this[this.tabletbl_itemsSell.invoiceSell_idColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.invoiceSell_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool invoiceSell_kind {
                get {
                    return ((bool)(this[this.tabletbl_itemsSell.invoiceSell_kindColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.invoiceSell_kindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int object_id {
                get {
                    return ((int)(this[this.tabletbl_itemsSell.object_idColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.object_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int itemSell_unitCount {
                get {
                    return ((int)(this[this.tabletbl_itemsSell.itemSell_unitCountColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.itemSell_unitCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long itemSell_retailCount {
                get {
                    return ((long)(this[this.tabletbl_itemsSell.itemSell_retailCountColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.itemSell_retailCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long itemSell_retailPrice {
                get {
                    return ((long)(this[this.tabletbl_itemsSell.itemSell_retailPriceColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.itemSell_retailPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long itemSell_totalPrice {
                get {
                    return ((long)(this[this.tabletbl_itemsSell.itemSell_totalPriceColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.itemSell_totalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short itemSell_discountPercent {
                get {
                    return ((short)(this[this.tabletbl_itemsSell.itemSell_discountPercentColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.itemSell_discountPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short itemSell_visitorPercent {
                get {
                    return ((short)(this[this.tabletbl_itemsSell.itemSell_visitorPercentColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.itemSell_visitorPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long itemSell_transportPrice {
                get {
                    return ((long)(this[this.tabletbl_itemsSell.itemSell_transportPriceColumn]));
                }
                set {
                    this[this.tabletbl_itemsSell.itemSell_transportPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long itemSell_taxPercent {
                get {
                    try {
                        return ((long)(this[this.tabletbl_itemsSell.itemSell_taxPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'itemSell_taxPercent\' in table \'tbl_itemsSell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_itemsSell.itemSell_taxPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string itemSell_comment {
                get {
                    try {
                        return ((string)(this[this.tabletbl_itemsSell.itemSell_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'itemSell_comment\' in table \'tbl_itemsSell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_itemsSell.itemSell_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesSellRow tbl_invoicesSellRowParent {
                get {
                    return ((tbl_invoicesSellRow)(this.GetParentRow(this.Table.ParentRelations["FK_tbl_itemsSell_tbl_invoicesSell"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tbl_itemsSell_tbl_invoicesSell"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemSell_taxPercentNull() {
                return this.IsNull(this.tabletbl_itemsSell.itemSell_taxPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemSell_taxPercentNull() {
                this[this.tabletbl_itemsSell.itemSell_taxPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemSell_commentNull() {
                return this.IsNull(this.tabletbl_itemsSell.itemSell_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemSell_commentNull() {
                this[this.tabletbl_itemsSell.itemSell_commentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbl_invoicesSellRow : global::System.Data.DataRow {
            
            private tbl_invoicesSellDataTable tabletbl_invoicesSell;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_invoicesSellRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbl_invoicesSell = ((tbl_invoicesSellDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int invoiceSell_id {
                get {
                    return ((int)(this[this.tabletbl_invoicesSell.invoiceSell_idColumn]));
                }
                set {
                    this[this.tabletbl_invoicesSell.invoiceSell_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool invoiceSell_kind {
                get {
                    return ((bool)(this[this.tabletbl_invoicesSell.invoiceSell_kindColumn]));
                }
                set {
                    this[this.tabletbl_invoicesSell.invoiceSell_kindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int person_id {
                get {
                    return ((int)(this[this.tabletbl_invoicesSell.person_idColumn]));
                }
                set {
                    this[this.tabletbl_invoicesSell.person_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int accDoc_id {
                get {
                    return ((int)(this[this.tabletbl_invoicesSell.accDoc_idColumn]));
                }
                set {
                    this[this.tabletbl_invoicesSell.accDoc_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string invoiceSell_date {
                get {
                    return ((string)(this[this.tabletbl_invoicesSell.invoiceSell_dateColumn]));
                }
                set {
                    this[this.tabletbl_invoicesSell.invoiceSell_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long invoiceSell_totalPrice {
                get {
                    return ((long)(this[this.tabletbl_invoicesSell.invoiceSell_totalPriceColumn]));
                }
                set {
                    this[this.tabletbl_invoicesSell.invoiceSell_totalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string invoiceSell_comment {
                get {
                    try {
                        return ((string)(this[this.tabletbl_invoicesSell.invoiceSell_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoiceSell_comment\' in table \'tbl_invoicesSell\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletbl_invoicesSell.invoiceSell_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow tbl_accDocsRow {
                get {
                    return ((tbl_accDocsRow)(this.GetParentRow(this.Table.ParentRelations["FK_tbl_invoicesSell_tbl_accDocs1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tbl_invoicesSell_tbl_accDocs1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinvoiceSell_commentNull() {
                return this.IsNull(this.tabletbl_invoicesSell.invoiceSell_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinvoiceSell_commentNull() {
                this[this.tabletbl_invoicesSell.invoiceSell_commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsSellRow[] Gettbl_itemsSellRows() {
                if ((this.Table.ChildRelations["FK_tbl_itemsSell_tbl_invoicesSell"] == null)) {
                    return new tbl_itemsSellRow[0];
                }
                else {
                    return ((tbl_itemsSellRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tbl_itemsSell_tbl_invoicesSell"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class viw_itemsSellRowChangeEvent : global::System.EventArgs {
            
            private viw_itemsSellRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsSellRowChangeEvent(viw_itemsSellRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsSellRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbl_accDocsRowChangeEvent : global::System.EventArgs {
            
            private tbl_accDocsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRowChangeEvent(tbl_accDocsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbl_itemsSellRowChangeEvent : global::System.EventArgs {
            
            private tbl_itemsSellRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsSellRowChangeEvent(tbl_itemsSellRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsSellRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbl_invoicesSellRowChangeEvent : global::System.EventArgs {
            
            private tbl_invoicesSellRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesSellRowChangeEvent(tbl_invoicesSellRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesSellRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Novin.ds_sellInvoicesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class viw_itemsSellTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public viw_itemsSellTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "viw_itemsSell";
            tableMapping.ColumnMappings.Add("invoiceSell_id", "invoiceSell_id");
            tableMapping.ColumnMappings.Add("object_title", "object_title");
            tableMapping.ColumnMappings.Add("objectUnit_title", "objectUnit_title");
            tableMapping.ColumnMappings.Add("itemSell_unitCount", "itemSell_unitCount");
            tableMapping.ColumnMappings.Add("itemSell_retailCount", "itemSell_retailCount");
            tableMapping.ColumnMappings.Add("object_retailInUnit", "object_retailInUnit");
            tableMapping.ColumnMappings.Add("itemSell_retailPrice", "itemSell_retailPrice");
            tableMapping.ColumnMappings.Add("itemSell_discountPercent", "itemSell_discountPercent");
            tableMapping.ColumnMappings.Add("itemSell_taxPercent", "itemSell_taxPercent");
            tableMapping.ColumnMappings.Add("itemSell_comment", "itemSell_comment");
            tableMapping.ColumnMappings.Add("objectTotalCount", "objectTotalCount");
            tableMapping.ColumnMappings.Add("objectTotalPrice", "objectTotalPrice");
            tableMapping.ColumnMappings.Add("itemSell_visitorPercent", "itemSell_visitorPercent");
            tableMapping.ColumnMappings.Add("invoiceSell_kind", "invoiceSell_kind");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT invoiceSell_id, object_title, objectUnit_title, itemSell_unitCount, itemSell_retailCount, object_retailInUnit, itemSell_retailPrice, itemSell_discountPercent, itemSell_taxPercent, itemSell_comment, objectTotalCount, objectTotalPrice, itemSell_visitorPercent, invoiceSell_kind FROM viw_itemsSell";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     SUM(objectTotalCount) AS invoiceTotalCount\r\nFROM         viw_itemsSell" +
                "\r\nGROUP BY invoiceSell_id\r\nHAVING      (invoiceSell_id = @invoiceSell_id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     SUM(objectTotalPrice) AS invoiceTotalPrice\r\nFROM         viw_itemsSell" +
                "\r\nGROUP BY invoiceSell_id\r\nHAVING      (invoiceSell_id = @invoiceSell_id)\r\n";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_sellInvoices.viw_itemsSellDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_sellInvoices.viw_itemsSellDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_sellInvoices.viw_itemsSellDataTable dataTable = new ds_sellInvoices.viw_itemsSellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object getInvoiceSellTotalCount(int invoiceSell_id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(invoiceSell_id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object getInvoiceSellTotalPrice(int invoiceSell_id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(invoiceSell_id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbl_accDocsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tbl_accDocsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbl_accDocs";
            tableMapping.ColumnMappings.Add("accDoc_id", "accDoc_id");
            tableMapping.ColumnMappings.Add("accDoc_price", "accDoc_price");
            tableMapping.ColumnMappings.Add("accDoc_date", "accDoc_date");
            tableMapping.ColumnMappings.Add("accDoc_comment", "accDoc_comment");
            tableMapping.ColumnMappings.Add("accDoc_isItPerm", "accDoc_isItPerm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[tbl_accDocs] WHERE (([accDoc_id] = @Original_accDoc_id) AND ([accDoc_price] = @Original_accDoc_price) AND ([accDoc_date] = @Original_accDoc_date) AND ((@IsNull_accDoc_comment = 1 AND [accDoc_comment] IS NULL) OR ([accDoc_comment] = @Original_accDoc_comment)) AND ([accDoc_isItPerm] = @Original_accDoc_isItPerm))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_price", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_accDoc_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_isItPerm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_isItPerm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[tbl_accDocs] ([accDoc_id], [accDoc_price], [accDoc_date], [accDoc_comment], [accDoc_isItPerm]) VALUES (@accDoc_id, @accDoc_price, @accDoc_date, @accDoc_comment, @accDoc_isItPerm);
SELECT accDoc_id, accDoc_price, accDoc_date, accDoc_comment, accDoc_isItPerm FROM tbl_accDocs WHERE (accDoc_id = @accDoc_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_price", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_isItPerm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_isItPerm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[tbl_accDocs] SET [accDoc_id] = @accDoc_id, [accDoc_price] = @accDoc_price, [accDoc_date] = @accDoc_date, [accDoc_comment] = @accDoc_comment, [accDoc_isItPerm] = @accDoc_isItPerm WHERE (([accDoc_id] = @Original_accDoc_id) AND ([accDoc_price] = @Original_accDoc_price) AND ([accDoc_date] = @Original_accDoc_date) AND ((@IsNull_accDoc_comment = 1 AND [accDoc_comment] IS NULL) OR ([accDoc_comment] = @Original_accDoc_comment)) AND ([accDoc_isItPerm] = @Original_accDoc_isItPerm));
SELECT accDoc_id, accDoc_price, accDoc_date, accDoc_comment, accDoc_isItPerm FROM tbl_accDocs WHERE (accDoc_id = @accDoc_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_price", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_isItPerm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_isItPerm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_price", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_accDoc_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_isItPerm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_isItPerm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT accDoc_id, accDoc_price, accDoc_date, accDoc_comment, accDoc_isItPerm FROM" +
                " dbo.tbl_accDocs";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_sellInvoices.tbl_accDocsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_sellInvoices.tbl_accDocsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_sellInvoices.tbl_accDocsDataTable dataTable = new ds_sellInvoices.tbl_accDocsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_sellInvoices.tbl_accDocsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_sellInvoices dataSet) {
            return this.Adapter.Update(dataSet, "tbl_accDocs");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_accDoc_id, long Original_accDoc_price, string Original_accDoc_date, string Original_accDoc_comment, bool Original_accDoc_isItPerm) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_accDoc_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_accDoc_price));
            if ((Original_accDoc_date == null)) {
                throw new global::System.ArgumentNullException("Original_accDoc_date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_accDoc_date));
            }
            if ((Original_accDoc_comment == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_accDoc_comment));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_accDoc_isItPerm));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int accDoc_id, long accDoc_price, string accDoc_date, string accDoc_comment, bool accDoc_isItPerm) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(accDoc_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(accDoc_price));
            if ((accDoc_date == null)) {
                throw new global::System.ArgumentNullException("accDoc_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(accDoc_date));
            }
            if ((accDoc_comment == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(accDoc_comment));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(accDoc_isItPerm));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int accDoc_id, long accDoc_price, string accDoc_date, string accDoc_comment, bool accDoc_isItPerm, int Original_accDoc_id, long Original_accDoc_price, string Original_accDoc_date, string Original_accDoc_comment, bool Original_accDoc_isItPerm) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(accDoc_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(accDoc_price));
            if ((accDoc_date == null)) {
                throw new global::System.ArgumentNullException("accDoc_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(accDoc_date));
            }
            if ((accDoc_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(accDoc_comment));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(accDoc_isItPerm));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_accDoc_id));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_accDoc_price));
            if ((Original_accDoc_date == null)) {
                throw new global::System.ArgumentNullException("Original_accDoc_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_accDoc_date));
            }
            if ((Original_accDoc_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_accDoc_comment));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_accDoc_isItPerm));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long accDoc_price, string accDoc_date, string accDoc_comment, bool accDoc_isItPerm, int Original_accDoc_id, long Original_accDoc_price, string Original_accDoc_date, string Original_accDoc_comment, bool Original_accDoc_isItPerm) {
            return this.Update(Original_accDoc_id, accDoc_price, accDoc_date, accDoc_comment, accDoc_isItPerm, Original_accDoc_id, Original_accDoc_price, Original_accDoc_date, Original_accDoc_comment, Original_accDoc_isItPerm);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbl_itemsSellTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tbl_itemsSellTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbl_itemsSell";
            tableMapping.ColumnMappings.Add("itemSell_id", "itemSell_id");
            tableMapping.ColumnMappings.Add("invoiceSell_id", "invoiceSell_id");
            tableMapping.ColumnMappings.Add("invoiceSell_kind", "invoiceSell_kind");
            tableMapping.ColumnMappings.Add("object_id", "object_id");
            tableMapping.ColumnMappings.Add("itemSell_unitCount", "itemSell_unitCount");
            tableMapping.ColumnMappings.Add("itemSell_retailCount", "itemSell_retailCount");
            tableMapping.ColumnMappings.Add("itemSell_retailPrice", "itemSell_retailPrice");
            tableMapping.ColumnMappings.Add("itemSell_totalPrice", "itemSell_totalPrice");
            tableMapping.ColumnMappings.Add("itemSell_discountPercent", "itemSell_discountPercent");
            tableMapping.ColumnMappings.Add("itemSell_visitorPercent", "itemSell_visitorPercent");
            tableMapping.ColumnMappings.Add("itemSell_transportPrice", "itemSell_transportPrice");
            tableMapping.ColumnMappings.Add("itemSell_taxPercent", "itemSell_taxPercent");
            tableMapping.ColumnMappings.Add("itemSell_comment", "itemSell_comment");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[tbl_itemsSell] WHERE (([itemSell_id] = @Original_itemSell_id) AND ([invoiceSell_id] = @Original_invoiceSell_id) AND ([invoiceSell_kind] = @Original_invoiceSell_kind) AND ([object_id] = @Original_object_id) AND ([itemSell_unitCount] = @Original_itemSell_unitCount) AND ([itemSell_retailCount] = @Original_itemSell_retailCount) AND ([itemSell_retailPrice] = @Original_itemSell_retailPrice) AND ([itemSell_totalPrice] = @Original_itemSell_totalPrice) AND ([itemSell_discountPercent] = @Original_itemSell_discountPercent) AND ([itemSell_visitorPercent] = @Original_itemSell_visitorPercent) AND ([itemSell_transportPrice] = @Original_itemSell_transportPrice) AND ((@IsNull_itemSell_taxPercent = 1 AND [itemSell_taxPercent] IS NULL) OR ([itemSell_taxPercent] = @Original_itemSell_taxPercent)) AND ((@IsNull_itemSell_comment = 1 AND [itemSell_comment] IS NULL) OR ([itemSell_comment] = @Original_itemSell_comment)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_kind", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_kind", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_unitCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_retailCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_retailCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_retailPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_retailPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_totalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_discountPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_discountPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_visitorPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_visitorPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_transportPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_transportPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_itemSell_taxPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_taxPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_taxPercent", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_taxPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_itemSell_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[tbl_itemsSell] ([invoiceSell_id], [invoiceSell_kind], [object_id], [itemSell_unitCount], [itemSell_retailCount], [itemSell_retailPrice], [itemSell_totalPrice], [itemSell_discountPercent], [itemSell_visitorPercent], [itemSell_transportPrice], [itemSell_taxPercent], [itemSell_comment]) VALUES (@invoiceSell_id, @invoiceSell_kind, @object_id, @itemSell_unitCount, @itemSell_retailCount, @itemSell_retailPrice, @itemSell_totalPrice, @itemSell_discountPercent, @itemSell_visitorPercent, @itemSell_transportPrice, @itemSell_taxPercent, @itemSell_comment);
SELECT itemSell_id, invoiceSell_id, invoiceSell_kind, object_id, itemSell_unitCount, itemSell_retailCount, itemSell_retailPrice, itemSell_totalPrice, itemSell_discountPercent, itemSell_visitorPercent, itemSell_transportPrice, itemSell_taxPercent, itemSell_comment FROM tbl_itemsSell WHERE (itemSell_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_kind", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_kind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_unitCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_retailCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_retailCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_retailPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_retailPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_totalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_discountPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_discountPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_visitorPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_visitorPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_transportPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_transportPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_taxPercent", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_taxPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_itemsSell] SET [invoiceSell_id] = @invoiceSell_id, [invoiceSell" +
                "_kind] = @invoiceSell_kind, [object_id] = @object_id, [itemSell_unitCount] = @it" +
                "emSell_unitCount, [itemSell_retailCount] = @itemSell_retailCount, [itemSell_reta" +
                "ilPrice] = @itemSell_retailPrice, [itemSell_totalPrice] = @itemSell_totalPrice, " +
                "[itemSell_discountPercent] = @itemSell_discountPercent, [itemSell_visitorPercent" +
                "] = @itemSell_visitorPercent, [itemSell_transportPrice] = @itemSell_transportPri" +
                "ce, [itemSell_taxPercent] = @itemSell_taxPercent, [itemSell_comment] = @itemSell" +
                "_comment WHERE (([itemSell_id] = @Original_itemSell_id) AND ([invoiceSell_id] = " +
                "@Original_invoiceSell_id) AND ([invoiceSell_kind] = @Original_invoiceSell_kind) " +
                "AND ([object_id] = @Original_object_id) AND ([itemSell_unitCount] = @Original_it" +
                "emSell_unitCount) AND ([itemSell_retailCount] = @Original_itemSell_retailCount) " +
                "AND ([itemSell_retailPrice] = @Original_itemSell_retailPrice) AND ([itemSell_tot" +
                "alPrice] = @Original_itemSell_totalPrice) AND ([itemSell_discountPercent] = @Ori" +
                "ginal_itemSell_discountPercent) AND ([itemSell_visitorPercent] = @Original_itemS" +
                "ell_visitorPercent) AND ([itemSell_transportPrice] = @Original_itemSell_transpor" +
                "tPrice) AND ((@IsNull_itemSell_taxPercent = 1 AND [itemSell_taxPercent] IS NULL)" +
                " OR ([itemSell_taxPercent] = @Original_itemSell_taxPercent)) AND ((@IsNull_itemS" +
                "ell_comment = 1 AND [itemSell_comment] IS NULL) OR ([itemSell_comment] = @Origin" +
                "al_itemSell_comment)));\r\nSELECT itemSell_id, invoiceSell_id, invoiceSell_kind, o" +
                "bject_id, itemSell_unitCount, itemSell_retailCount, itemSell_retailPrice, itemSe" +
                "ll_totalPrice, itemSell_discountPercent, itemSell_visitorPercent, itemSell_trans" +
                "portPrice, itemSell_taxPercent, itemSell_comment FROM tbl_itemsSell WHERE (itemS" +
                "ell_id = @itemSell_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_kind", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_kind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_unitCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_retailCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_retailCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_retailPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_retailPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_totalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_discountPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_discountPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_visitorPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_visitorPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_transportPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_transportPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_taxPercent", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_taxPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_kind", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_kind", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_unitCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_retailCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_retailCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_retailPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_retailPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_totalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_discountPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_discountPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_visitorPercent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_visitorPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_transportPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_transportPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_itemSell_taxPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_taxPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_taxPercent", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_taxPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_itemSell_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemSell_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemSell_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "itemSell_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT itemSell_id, invoiceSell_id, invoiceSell_kind, object_id, itemSell_unitCount, itemSell_retailCount, itemSell_retailPrice, itemSell_totalPrice, itemSell_discountPercent, itemSell_visitorPercent, itemSell_transportPrice, itemSell_taxPercent, itemSell_comment FROM dbo.tbl_itemsSell";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_sellInvoices.tbl_itemsSellDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_sellInvoices.tbl_itemsSellDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_sellInvoices.tbl_itemsSellDataTable dataTable = new ds_sellInvoices.tbl_itemsSellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_sellInvoices.tbl_itemsSellDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_sellInvoices dataSet) {
            return this.Adapter.Update(dataSet, "tbl_itemsSell");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_itemSell_id, int Original_invoiceSell_id, bool Original_invoiceSell_kind, int Original_object_id, int Original_itemSell_unitCount, long Original_itemSell_retailCount, long Original_itemSell_retailPrice, long Original_itemSell_totalPrice, short Original_itemSell_discountPercent, short Original_itemSell_visitorPercent, long Original_itemSell_transportPrice, global::System.Nullable<long> Original_itemSell_taxPercent, string Original_itemSell_comment) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_itemSell_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_invoiceSell_id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_invoiceSell_kind));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_object_id));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_itemSell_unitCount));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_itemSell_retailCount));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((long)(Original_itemSell_retailPrice));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(Original_itemSell_totalPrice));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_itemSell_discountPercent));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((short)(Original_itemSell_visitorPercent));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(Original_itemSell_transportPrice));
            if ((Original_itemSell_taxPercent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((long)(Original_itemSell_taxPercent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_itemSell_comment == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_itemSell_comment));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int invoiceSell_id, bool invoiceSell_kind, int object_id, int itemSell_unitCount, long itemSell_retailCount, long itemSell_retailPrice, long itemSell_totalPrice, short itemSell_discountPercent, short itemSell_visitorPercent, long itemSell_transportPrice, global::System.Nullable<long> itemSell_taxPercent, string itemSell_comment) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(invoiceSell_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(invoiceSell_kind));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(object_id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(itemSell_unitCount));
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(itemSell_retailCount));
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(itemSell_retailPrice));
            this.Adapter.InsertCommand.Parameters[6].Value = ((long)(itemSell_totalPrice));
            this.Adapter.InsertCommand.Parameters[7].Value = ((short)(itemSell_discountPercent));
            this.Adapter.InsertCommand.Parameters[8].Value = ((short)(itemSell_visitorPercent));
            this.Adapter.InsertCommand.Parameters[9].Value = ((long)(itemSell_transportPrice));
            if ((itemSell_taxPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((long)(itemSell_taxPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((itemSell_comment == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(itemSell_comment));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int invoiceSell_id, 
                    bool invoiceSell_kind, 
                    int object_id, 
                    int itemSell_unitCount, 
                    long itemSell_retailCount, 
                    long itemSell_retailPrice, 
                    long itemSell_totalPrice, 
                    short itemSell_discountPercent, 
                    short itemSell_visitorPercent, 
                    long itemSell_transportPrice, 
                    global::System.Nullable<long> itemSell_taxPercent, 
                    string itemSell_comment, 
                    int Original_itemSell_id, 
                    int Original_invoiceSell_id, 
                    bool Original_invoiceSell_kind, 
                    int Original_object_id, 
                    int Original_itemSell_unitCount, 
                    long Original_itemSell_retailCount, 
                    long Original_itemSell_retailPrice, 
                    long Original_itemSell_totalPrice, 
                    short Original_itemSell_discountPercent, 
                    short Original_itemSell_visitorPercent, 
                    long Original_itemSell_transportPrice, 
                    global::System.Nullable<long> Original_itemSell_taxPercent, 
                    string Original_itemSell_comment, 
                    int itemSell_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(invoiceSell_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(invoiceSell_kind));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(object_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(itemSell_unitCount));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(itemSell_retailCount));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(itemSell_retailPrice));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(itemSell_totalPrice));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(itemSell_discountPercent));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(itemSell_visitorPercent));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(itemSell_transportPrice));
            if ((itemSell_taxPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(itemSell_taxPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((itemSell_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(itemSell_comment));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_itemSell_id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_invoiceSell_id));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(Original_invoiceSell_kind));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_object_id));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_itemSell_unitCount));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(Original_itemSell_retailCount));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Original_itemSell_retailPrice));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(Original_itemSell_totalPrice));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((short)(Original_itemSell_discountPercent));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((short)(Original_itemSell_visitorPercent));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((long)(Original_itemSell_transportPrice));
            if ((Original_itemSell_taxPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(Original_itemSell_taxPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_itemSell_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_itemSell_comment));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(itemSell_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int invoiceSell_id, 
                    bool invoiceSell_kind, 
                    int object_id, 
                    int itemSell_unitCount, 
                    long itemSell_retailCount, 
                    long itemSell_retailPrice, 
                    long itemSell_totalPrice, 
                    short itemSell_discountPercent, 
                    short itemSell_visitorPercent, 
                    long itemSell_transportPrice, 
                    global::System.Nullable<long> itemSell_taxPercent, 
                    string itemSell_comment, 
                    int Original_itemSell_id, 
                    int Original_invoiceSell_id, 
                    bool Original_invoiceSell_kind, 
                    int Original_object_id, 
                    int Original_itemSell_unitCount, 
                    long Original_itemSell_retailCount, 
                    long Original_itemSell_retailPrice, 
                    long Original_itemSell_totalPrice, 
                    short Original_itemSell_discountPercent, 
                    short Original_itemSell_visitorPercent, 
                    long Original_itemSell_transportPrice, 
                    global::System.Nullable<long> Original_itemSell_taxPercent, 
                    string Original_itemSell_comment) {
            return this.Update(invoiceSell_id, invoiceSell_kind, object_id, itemSell_unitCount, itemSell_retailCount, itemSell_retailPrice, itemSell_totalPrice, itemSell_discountPercent, itemSell_visitorPercent, itemSell_transportPrice, itemSell_taxPercent, itemSell_comment, Original_itemSell_id, Original_invoiceSell_id, Original_invoiceSell_kind, Original_object_id, Original_itemSell_unitCount, Original_itemSell_retailCount, Original_itemSell_retailPrice, Original_itemSell_totalPrice, Original_itemSell_discountPercent, Original_itemSell_visitorPercent, Original_itemSell_transportPrice, Original_itemSell_taxPercent, Original_itemSell_comment, Original_itemSell_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbl_invoicesSellTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tbl_invoicesSellTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbl_invoicesSell";
            tableMapping.ColumnMappings.Add("invoiceSell_id", "invoiceSell_id");
            tableMapping.ColumnMappings.Add("invoiceSell_kind", "invoiceSell_kind");
            tableMapping.ColumnMappings.Add("person_id", "person_id");
            tableMapping.ColumnMappings.Add("accDoc_id", "accDoc_id");
            tableMapping.ColumnMappings.Add("invoiceSell_date", "invoiceSell_date");
            tableMapping.ColumnMappings.Add("invoiceSell_totalPrice", "invoiceSell_totalPrice");
            tableMapping.ColumnMappings.Add("invoiceSell_comment", "invoiceSell_comment");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tbl_invoicesSell] WHERE (([invoiceSell_id] = @Original_invoiceSell_id) AND ([invoiceSell_kind] = @Original_invoiceSell_kind) AND ([person_id] = @Original_person_id) AND ([accDoc_id] = @Original_accDoc_id) AND ([invoiceSell_date] = @Original_invoiceSell_date) AND ([invoiceSell_totalPrice] = @Original_invoiceSell_totalPrice) AND ((@IsNull_invoiceSell_comment = 1 AND [invoiceSell_comment] IS NULL) OR ([invoiceSell_comment] = @Original_invoiceSell_comment)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_kind", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_kind", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_person_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "person_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_totalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_invoiceSell_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tbl_invoicesSell] ([invoiceSell_id], [invoiceSell_kind], [person_id], [accDoc_id], [invoiceSell_date], [invoiceSell_totalPrice], [invoiceSell_comment]) VALUES (@invoiceSell_id, @invoiceSell_kind, @person_id, @accDoc_id, @invoiceSell_date, @invoiceSell_totalPrice, @invoiceSell_comment);
SELECT invoiceSell_id, invoiceSell_kind, person_id, accDoc_id, invoiceSell_date, invoiceSell_totalPrice, invoiceSell_comment FROM tbl_invoicesSell WHERE (invoiceSell_id = @invoiceSell_id) AND (invoiceSell_kind = @invoiceSell_kind)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_kind", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_kind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@person_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "person_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_totalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tbl_invoicesSell] SET [invoiceSell_id] = @invoiceSell_id, [invoiceSell_kind] = @invoiceSell_kind, [person_id] = @person_id, [accDoc_id] = @accDoc_id, [invoiceSell_date] = @invoiceSell_date, [invoiceSell_totalPrice] = @invoiceSell_totalPrice, [invoiceSell_comment] = @invoiceSell_comment WHERE (([invoiceSell_id] = @Original_invoiceSell_id) AND ([invoiceSell_kind] = @Original_invoiceSell_kind) AND ([person_id] = @Original_person_id) AND ([accDoc_id] = @Original_accDoc_id) AND ([invoiceSell_date] = @Original_invoiceSell_date) AND ([invoiceSell_totalPrice] = @Original_invoiceSell_totalPrice) AND ((@IsNull_invoiceSell_comment = 1 AND [invoiceSell_comment] IS NULL) OR ([invoiceSell_comment] = @Original_invoiceSell_comment)));
SELECT invoiceSell_id, invoiceSell_kind, person_id, accDoc_id, invoiceSell_date, invoiceSell_totalPrice, invoiceSell_comment FROM tbl_invoicesSell WHERE (invoiceSell_id = @invoiceSell_id) AND (invoiceSell_kind = @invoiceSell_kind)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_kind", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_kind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@person_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "person_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_totalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceSell_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_kind", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_kind", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_person_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "person_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_totalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_invoiceSell_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceSell_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceSell_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT invoiceSell_id, invoiceSell_kind, person_id, accDoc_id, invoiceSell_date, " +
                "invoiceSell_totalPrice, invoiceSell_comment FROM tbl_invoicesSell";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_sellInvoices.tbl_invoicesSellDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_sellInvoices.tbl_invoicesSellDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_sellInvoices.tbl_invoicesSellDataTable dataTable = new ds_sellInvoices.tbl_invoicesSellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_sellInvoices.tbl_invoicesSellDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_sellInvoices dataSet) {
            return this.Adapter.Update(dataSet, "tbl_invoicesSell");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_invoiceSell_id, bool Original_invoiceSell_kind, int Original_person_id, int Original_accDoc_id, string Original_invoiceSell_date, long Original_invoiceSell_totalPrice, string Original_invoiceSell_comment) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_invoiceSell_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((bool)(Original_invoiceSell_kind));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_person_id));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_accDoc_id));
            if ((Original_invoiceSell_date == null)) {
                throw new global::System.ArgumentNullException("Original_invoiceSell_date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_invoiceSell_date));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_invoiceSell_totalPrice));
            if ((Original_invoiceSell_comment == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_invoiceSell_comment));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int invoiceSell_id, bool invoiceSell_kind, int person_id, int accDoc_id, string invoiceSell_date, long invoiceSell_totalPrice, string invoiceSell_comment) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(invoiceSell_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(invoiceSell_kind));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(person_id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(accDoc_id));
            if ((invoiceSell_date == null)) {
                throw new global::System.ArgumentNullException("invoiceSell_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(invoiceSell_date));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(invoiceSell_totalPrice));
            if ((invoiceSell_comment == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(invoiceSell_comment));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int invoiceSell_id, bool invoiceSell_kind, int person_id, int accDoc_id, string invoiceSell_date, long invoiceSell_totalPrice, string invoiceSell_comment, int Original_invoiceSell_id, bool Original_invoiceSell_kind, int Original_person_id, int Original_accDoc_id, string Original_invoiceSell_date, long Original_invoiceSell_totalPrice, string Original_invoiceSell_comment) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(invoiceSell_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(invoiceSell_kind));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(person_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(accDoc_id));
            if ((invoiceSell_date == null)) {
                throw new global::System.ArgumentNullException("invoiceSell_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(invoiceSell_date));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(invoiceSell_totalPrice));
            if ((invoiceSell_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(invoiceSell_comment));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_invoiceSell_id));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Original_invoiceSell_kind));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_person_id));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_accDoc_id));
            if ((Original_invoiceSell_date == null)) {
                throw new global::System.ArgumentNullException("Original_invoiceSell_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_invoiceSell_date));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_invoiceSell_totalPrice));
            if ((Original_invoiceSell_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_invoiceSell_comment));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int person_id, int accDoc_id, string invoiceSell_date, long invoiceSell_totalPrice, string invoiceSell_comment, int Original_invoiceSell_id, bool Original_invoiceSell_kind, int Original_person_id, int Original_accDoc_id, string Original_invoiceSell_date, long Original_invoiceSell_totalPrice, string Original_invoiceSell_comment) {
            return this.Update(Original_invoiceSell_id, Original_invoiceSell_kind, person_id, accDoc_id, invoiceSell_date, invoiceSell_totalPrice, invoiceSell_comment, Original_invoiceSell_id, Original_invoiceSell_kind, Original_person_id, Original_accDoc_id, Original_invoiceSell_date, Original_invoiceSell_totalPrice, Original_invoiceSell_comment);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private tbl_accDocsTableAdapter _tbl_accDocsTableAdapter;
        
        private tbl_itemsSellTableAdapter _tbl_itemsSellTableAdapter;
        
        private tbl_invoicesSellTableAdapter _tbl_invoicesSellTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tbl_accDocsTableAdapter tbl_accDocsTableAdapter {
            get {
                return this._tbl_accDocsTableAdapter;
            }
            set {
                this._tbl_accDocsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tbl_itemsSellTableAdapter tbl_itemsSellTableAdapter {
            get {
                return this._tbl_itemsSellTableAdapter;
            }
            set {
                this._tbl_itemsSellTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tbl_invoicesSellTableAdapter tbl_invoicesSellTableAdapter {
            get {
                return this._tbl_invoicesSellTableAdapter;
            }
            set {
                this._tbl_invoicesSellTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tbl_accDocsTableAdapter != null) 
                            && (this._tbl_accDocsTableAdapter.Connection != null))) {
                    return this._tbl_accDocsTableAdapter.Connection;
                }
                if (((this._tbl_itemsSellTableAdapter != null) 
                            && (this._tbl_itemsSellTableAdapter.Connection != null))) {
                    return this._tbl_itemsSellTableAdapter.Connection;
                }
                if (((this._tbl_invoicesSellTableAdapter != null) 
                            && (this._tbl_invoicesSellTableAdapter.Connection != null))) {
                    return this._tbl_invoicesSellTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tbl_accDocsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tbl_itemsSellTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tbl_invoicesSellTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(ds_sellInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tbl_accDocsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbl_accDocs.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_accDocsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tbl_invoicesSellTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbl_invoicesSell.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_invoicesSellTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tbl_itemsSellTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbl_itemsSell.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_itemsSellTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(ds_sellInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tbl_accDocsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbl_accDocs.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_accDocsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tbl_invoicesSellTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbl_invoicesSell.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_invoicesSellTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tbl_itemsSellTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbl_itemsSell.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_itemsSellTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(ds_sellInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tbl_itemsSellTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbl_itemsSell.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_itemsSellTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tbl_invoicesSellTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbl_invoicesSell.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_invoicesSellTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tbl_accDocsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbl_accDocs.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_accDocsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(ds_sellInvoices dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tbl_accDocsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_accDocsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tbl_itemsSellTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_itemsSellTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tbl_invoicesSellTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_invoicesSellTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tbl_accDocsTableAdapter != null)) {
                    revertConnections.Add(this._tbl_accDocsTableAdapter, this._tbl_accDocsTableAdapter.Connection);
                    this._tbl_accDocsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_accDocsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_accDocsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_accDocsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_accDocsTableAdapter.Adapter);
                    }
                }
                if ((this._tbl_itemsSellTableAdapter != null)) {
                    revertConnections.Add(this._tbl_itemsSellTableAdapter, this._tbl_itemsSellTableAdapter.Connection);
                    this._tbl_itemsSellTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_itemsSellTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_itemsSellTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_itemsSellTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_itemsSellTableAdapter.Adapter);
                    }
                }
                if ((this._tbl_invoicesSellTableAdapter != null)) {
                    revertConnections.Add(this._tbl_invoicesSellTableAdapter, this._tbl_invoicesSellTableAdapter.Connection);
                    this._tbl_invoicesSellTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_invoicesSellTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_invoicesSellTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_invoicesSellTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_invoicesSellTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tbl_accDocsTableAdapter != null)) {
                    this._tbl_accDocsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_accDocsTableAdapter]));
                    this._tbl_accDocsTableAdapter.Transaction = null;
                }
                if ((this._tbl_itemsSellTableAdapter != null)) {
                    this._tbl_itemsSellTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_itemsSellTableAdapter]));
                    this._tbl_itemsSellTableAdapter.Transaction = null;
                }
                if ((this._tbl_invoicesSellTableAdapter != null)) {
                    this._tbl_invoicesSellTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_invoicesSellTableAdapter]));
                    this._tbl_invoicesSellTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591