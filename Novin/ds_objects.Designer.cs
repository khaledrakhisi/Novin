//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Novin {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("novinDBDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_objects : global::System.Data.DataSet {
        
        private tbl_masterGroupsDataTable tabletbl_masterGroups;
        
        private tbl_objectsDataTable tabletbl_objects;
        
        private tbl_slaveGroupsDataTable tabletbl_slaveGroups;
        
        private global::System.Data.DataRelation relationFK_tbl_objects_tbl_slaveGroups;
        
        private global::System.Data.DataRelation relationFK_tbl_slaveGroups_tbl_masterGroups;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ds_objects() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ds_objects(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tbl_masterGroups"] != null)) {
                    base.Tables.Add(new tbl_masterGroupsDataTable(ds.Tables["tbl_masterGroups"]));
                }
                if ((ds.Tables["tbl_objects"] != null)) {
                    base.Tables.Add(new tbl_objectsDataTable(ds.Tables["tbl_objects"]));
                }
                if ((ds.Tables["tbl_slaveGroups"] != null)) {
                    base.Tables.Add(new tbl_slaveGroupsDataTable(ds.Tables["tbl_slaveGroups"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbl_masterGroupsDataTable tbl_masterGroups {
            get {
                return this.tabletbl_masterGroups;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbl_objectsDataTable tbl_objects {
            get {
                return this.tabletbl_objects;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbl_slaveGroupsDataTable tbl_slaveGroups {
            get {
                return this.tabletbl_slaveGroups;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ds_objects cln = ((ds_objects)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tbl_masterGroups"] != null)) {
                    base.Tables.Add(new tbl_masterGroupsDataTable(ds.Tables["tbl_masterGroups"]));
                }
                if ((ds.Tables["tbl_objects"] != null)) {
                    base.Tables.Add(new tbl_objectsDataTable(ds.Tables["tbl_objects"]));
                }
                if ((ds.Tables["tbl_slaveGroups"] != null)) {
                    base.Tables.Add(new tbl_slaveGroupsDataTable(ds.Tables["tbl_slaveGroups"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletbl_masterGroups = ((tbl_masterGroupsDataTable)(base.Tables["tbl_masterGroups"]));
            if ((initTable == true)) {
                if ((this.tabletbl_masterGroups != null)) {
                    this.tabletbl_masterGroups.InitVars();
                }
            }
            this.tabletbl_objects = ((tbl_objectsDataTable)(base.Tables["tbl_objects"]));
            if ((initTable == true)) {
                if ((this.tabletbl_objects != null)) {
                    this.tabletbl_objects.InitVars();
                }
            }
            this.tabletbl_slaveGroups = ((tbl_slaveGroupsDataTable)(base.Tables["tbl_slaveGroups"]));
            if ((initTable == true)) {
                if ((this.tabletbl_slaveGroups != null)) {
                    this.tabletbl_slaveGroups.InitVars();
                }
            }
            this.relationFK_tbl_objects_tbl_slaveGroups = this.Relations["FK_tbl_objects_tbl_slaveGroups"];
            this.relationFK_tbl_slaveGroups_tbl_masterGroups = this.Relations["FK_tbl_slaveGroups_tbl_masterGroups"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "novinDBDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/novinDBDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletbl_masterGroups = new tbl_masterGroupsDataTable();
            base.Tables.Add(this.tabletbl_masterGroups);
            this.tabletbl_objects = new tbl_objectsDataTable();
            base.Tables.Add(this.tabletbl_objects);
            this.tabletbl_slaveGroups = new tbl_slaveGroupsDataTable();
            base.Tables.Add(this.tabletbl_slaveGroups);
            this.relationFK_tbl_objects_tbl_slaveGroups = new global::System.Data.DataRelation("FK_tbl_objects_tbl_slaveGroups", new global::System.Data.DataColumn[] {
                        this.tabletbl_slaveGroups.slaveGroup_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletbl_objects.slaveGroup_idColumn}, false);
            this.Relations.Add(this.relationFK_tbl_objects_tbl_slaveGroups);
            this.relationFK_tbl_slaveGroups_tbl_masterGroups = new global::System.Data.DataRelation("FK_tbl_slaveGroups_tbl_masterGroups", new global::System.Data.DataColumn[] {
                        this.tabletbl_masterGroups.masterGroup_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletbl_slaveGroups.masterGroup_idColumn}, false);
            this.Relations.Add(this.relationFK_tbl_slaveGroups_tbl_masterGroups);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbl_masterGroups() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbl_objects() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbl_slaveGroups() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_objects ds = new ds_objects();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tbl_masterGroupsRowChangeEventHandler(object sender, tbl_masterGroupsRowChangeEvent e);
        
        public delegate void tbl_objectsRowChangeEventHandler(object sender, tbl_objectsRowChangeEvent e);
        
        public delegate void tbl_slaveGroupsRowChangeEventHandler(object sender, tbl_slaveGroupsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbl_masterGroupsDataTable : global::System.Data.TypedTableBase<tbl_masterGroupsRow> {
            
            private global::System.Data.DataColumn columnmasterGroup_id;
            
            private global::System.Data.DataColumn columnmasterGroup_title;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_masterGroupsDataTable() {
                this.TableName = "tbl_masterGroups";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_masterGroupsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbl_masterGroupsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn masterGroup_idColumn {
                get {
                    return this.columnmasterGroup_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn masterGroup_titleColumn {
                get {
                    return this.columnmasterGroup_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_masterGroupsRow this[int index] {
                get {
                    return ((tbl_masterGroupsRow)(this.Rows[index]));
                }
            }
            
            public event tbl_masterGroupsRowChangeEventHandler tbl_masterGroupsRowChanging;
            
            public event tbl_masterGroupsRowChangeEventHandler tbl_masterGroupsRowChanged;
            
            public event tbl_masterGroupsRowChangeEventHandler tbl_masterGroupsRowDeleting;
            
            public event tbl_masterGroupsRowChangeEventHandler tbl_masterGroupsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtbl_masterGroupsRow(tbl_masterGroupsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_masterGroupsRow Addtbl_masterGroupsRow(string masterGroup_title) {
                tbl_masterGroupsRow rowtbl_masterGroupsRow = ((tbl_masterGroupsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        masterGroup_title};
                rowtbl_masterGroupsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbl_masterGroupsRow);
                return rowtbl_masterGroupsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_masterGroupsRow FindBymasterGroup_id(int masterGroup_id) {
                return ((tbl_masterGroupsRow)(this.Rows.Find(new object[] {
                            masterGroup_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbl_masterGroupsDataTable cln = ((tbl_masterGroupsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbl_masterGroupsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmasterGroup_id = base.Columns["masterGroup_id"];
                this.columnmasterGroup_title = base.Columns["masterGroup_title"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmasterGroup_id = new global::System.Data.DataColumn("masterGroup_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmasterGroup_id);
                this.columnmasterGroup_title = new global::System.Data.DataColumn("masterGroup_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmasterGroup_title);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnmasterGroup_id}, true));
                this.columnmasterGroup_id.AutoIncrement = true;
                this.columnmasterGroup_id.AutoIncrementSeed = -1;
                this.columnmasterGroup_id.AutoIncrementStep = -1;
                this.columnmasterGroup_id.AllowDBNull = false;
                this.columnmasterGroup_id.ReadOnly = true;
                this.columnmasterGroup_id.Unique = true;
                this.columnmasterGroup_title.AllowDBNull = false;
                this.columnmasterGroup_title.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_masterGroupsRow Newtbl_masterGroupsRow() {
                return ((tbl_masterGroupsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbl_masterGroupsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbl_masterGroupsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbl_masterGroupsRowChanged != null)) {
                    this.tbl_masterGroupsRowChanged(this, new tbl_masterGroupsRowChangeEvent(((tbl_masterGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbl_masterGroupsRowChanging != null)) {
                    this.tbl_masterGroupsRowChanging(this, new tbl_masterGroupsRowChangeEvent(((tbl_masterGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbl_masterGroupsRowDeleted != null)) {
                    this.tbl_masterGroupsRowDeleted(this, new tbl_masterGroupsRowChangeEvent(((tbl_masterGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbl_masterGroupsRowDeleting != null)) {
                    this.tbl_masterGroupsRowDeleting(this, new tbl_masterGroupsRowChangeEvent(((tbl_masterGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetbl_masterGroupsRow(tbl_masterGroupsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_objects ds = new ds_objects();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbl_masterGroupsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbl_objectsDataTable : global::System.Data.TypedTableBase<tbl_objectsRow> {
            
            private global::System.Data.DataColumn columnobject_id;
            
            private global::System.Data.DataColumn columnstore_id;
            
            private global::System.Data.DataColumn columnslaveGroup_id;
            
            private global::System.Data.DataColumn columnobject_title;
            
            private global::System.Data.DataColumn columnobject_unit;
            
            private global::System.Data.DataColumn columnobject_unitCount;
            
            private global::System.Data.DataColumn columnobject_totalCount;
            
            private global::System.Data.DataColumn columnobject_buyPriceAvg;
            
            private global::System.Data.DataColumn columnobject_lastBuyPrice;
            
            private global::System.Data.DataColumn columnobject_date;
            
            private global::System.Data.DataColumn columnobject_expireDate;
            
            private global::System.Data.DataColumn columnobject_lessSell;
            
            private global::System.Data.DataColumn columnobject_alarmRange;
            
            private global::System.Data.DataColumn columnobject_comment1;
            
            private global::System.Data.DataColumn columnobject_comment2;
            
            private global::System.Data.DataColumn columnobject_comment3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_objectsDataTable() {
                this.TableName = "tbl_objects";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_objectsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbl_objectsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_idColumn {
                get {
                    return this.columnobject_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn store_idColumn {
                get {
                    return this.columnstore_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slaveGroup_idColumn {
                get {
                    return this.columnslaveGroup_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_titleColumn {
                get {
                    return this.columnobject_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_unitColumn {
                get {
                    return this.columnobject_unit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_unitCountColumn {
                get {
                    return this.columnobject_unitCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_totalCountColumn {
                get {
                    return this.columnobject_totalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_buyPriceAvgColumn {
                get {
                    return this.columnobject_buyPriceAvg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_lastBuyPriceColumn {
                get {
                    return this.columnobject_lastBuyPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_dateColumn {
                get {
                    return this.columnobject_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_expireDateColumn {
                get {
                    return this.columnobject_expireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_lessSellColumn {
                get {
                    return this.columnobject_lessSell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_alarmRangeColumn {
                get {
                    return this.columnobject_alarmRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_comment1Column {
                get {
                    return this.columnobject_comment1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_comment2Column {
                get {
                    return this.columnobject_comment2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_comment3Column {
                get {
                    return this.columnobject_comment3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_objectsRow this[int index] {
                get {
                    return ((tbl_objectsRow)(this.Rows[index]));
                }
            }
            
            public event tbl_objectsRowChangeEventHandler tbl_objectsRowChanging;
            
            public event tbl_objectsRowChangeEventHandler tbl_objectsRowChanged;
            
            public event tbl_objectsRowChangeEventHandler tbl_objectsRowDeleting;
            
            public event tbl_objectsRowChangeEventHandler tbl_objectsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtbl_objectsRow(tbl_objectsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_objectsRow Addtbl_objectsRow(
                        int object_id, 
                        int store_id, 
                        tbl_slaveGroupsRow parenttbl_slaveGroupsRowByFK_tbl_objects_tbl_slaveGroups, 
                        string object_title, 
                        short object_unit, 
                        int object_unitCount, 
                        int object_totalCount, 
                        long object_buyPriceAvg, 
                        long object_lastBuyPrice, 
                        string object_date, 
                        string object_expireDate, 
                        int object_lessSell, 
                        int object_alarmRange, 
                        string object_comment1, 
                        string object_comment2, 
                        string object_comment3) {
                tbl_objectsRow rowtbl_objectsRow = ((tbl_objectsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        object_id,
                        store_id,
                        null,
                        object_title,
                        object_unit,
                        object_unitCount,
                        object_totalCount,
                        object_buyPriceAvg,
                        object_lastBuyPrice,
                        object_date,
                        object_expireDate,
                        object_lessSell,
                        object_alarmRange,
                        object_comment1,
                        object_comment2,
                        object_comment3};
                if ((parenttbl_slaveGroupsRowByFK_tbl_objects_tbl_slaveGroups != null)) {
                    columnValuesArray[2] = parenttbl_slaveGroupsRowByFK_tbl_objects_tbl_slaveGroups[0];
                }
                rowtbl_objectsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbl_objectsRow);
                return rowtbl_objectsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_objectsRow FindByobject_id(int object_id) {
                return ((tbl_objectsRow)(this.Rows.Find(new object[] {
                            object_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbl_objectsDataTable cln = ((tbl_objectsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbl_objectsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnobject_id = base.Columns["object_id"];
                this.columnstore_id = base.Columns["store_id"];
                this.columnslaveGroup_id = base.Columns["slaveGroup_id"];
                this.columnobject_title = base.Columns["object_title"];
                this.columnobject_unit = base.Columns["object_unit"];
                this.columnobject_unitCount = base.Columns["object_unitCount"];
                this.columnobject_totalCount = base.Columns["object_totalCount"];
                this.columnobject_buyPriceAvg = base.Columns["object_buyPriceAvg"];
                this.columnobject_lastBuyPrice = base.Columns["object_lastBuyPrice"];
                this.columnobject_date = base.Columns["object_date"];
                this.columnobject_expireDate = base.Columns["object_expireDate"];
                this.columnobject_lessSell = base.Columns["object_lessSell"];
                this.columnobject_alarmRange = base.Columns["object_alarmRange"];
                this.columnobject_comment1 = base.Columns["object_comment1"];
                this.columnobject_comment2 = base.Columns["object_comment2"];
                this.columnobject_comment3 = base.Columns["object_comment3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnobject_id = new global::System.Data.DataColumn("object_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_id);
                this.columnstore_id = new global::System.Data.DataColumn("store_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstore_id);
                this.columnslaveGroup_id = new global::System.Data.DataColumn("slaveGroup_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslaveGroup_id);
                this.columnobject_title = new global::System.Data.DataColumn("object_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_title);
                this.columnobject_unit = new global::System.Data.DataColumn("object_unit", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_unit);
                this.columnobject_unitCount = new global::System.Data.DataColumn("object_unitCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_unitCount);
                this.columnobject_totalCount = new global::System.Data.DataColumn("object_totalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_totalCount);
                this.columnobject_buyPriceAvg = new global::System.Data.DataColumn("object_buyPriceAvg", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_buyPriceAvg);
                this.columnobject_lastBuyPrice = new global::System.Data.DataColumn("object_lastBuyPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_lastBuyPrice);
                this.columnobject_date = new global::System.Data.DataColumn("object_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_date);
                this.columnobject_expireDate = new global::System.Data.DataColumn("object_expireDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_expireDate);
                this.columnobject_lessSell = new global::System.Data.DataColumn("object_lessSell", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_lessSell);
                this.columnobject_alarmRange = new global::System.Data.DataColumn("object_alarmRange", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_alarmRange);
                this.columnobject_comment1 = new global::System.Data.DataColumn("object_comment1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_comment1);
                this.columnobject_comment2 = new global::System.Data.DataColumn("object_comment2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_comment2);
                this.columnobject_comment3 = new global::System.Data.DataColumn("object_comment3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_comment3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnobject_id}, true));
                this.columnobject_id.AllowDBNull = false;
                this.columnobject_id.Unique = true;
                this.columnstore_id.AllowDBNull = false;
                this.columnslaveGroup_id.AllowDBNull = false;
                this.columnobject_title.AllowDBNull = false;
                this.columnobject_title.MaxLength = 50;
                this.columnobject_unit.AllowDBNull = false;
                this.columnobject_unitCount.AllowDBNull = false;
                this.columnobject_totalCount.AllowDBNull = false;
                this.columnobject_date.AllowDBNull = false;
                this.columnobject_date.MaxLength = 10;
                this.columnobject_expireDate.AllowDBNull = false;
                this.columnobject_expireDate.MaxLength = 10;
                this.columnobject_lessSell.AllowDBNull = false;
                this.columnobject_alarmRange.AllowDBNull = false;
                this.columnobject_comment1.MaxLength = 50;
                this.columnobject_comment2.MaxLength = 50;
                this.columnobject_comment3.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_objectsRow Newtbl_objectsRow() {
                return ((tbl_objectsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbl_objectsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbl_objectsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbl_objectsRowChanged != null)) {
                    this.tbl_objectsRowChanged(this, new tbl_objectsRowChangeEvent(((tbl_objectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbl_objectsRowChanging != null)) {
                    this.tbl_objectsRowChanging(this, new tbl_objectsRowChangeEvent(((tbl_objectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbl_objectsRowDeleted != null)) {
                    this.tbl_objectsRowDeleted(this, new tbl_objectsRowChangeEvent(((tbl_objectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbl_objectsRowDeleting != null)) {
                    this.tbl_objectsRowDeleting(this, new tbl_objectsRowChangeEvent(((tbl_objectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetbl_objectsRow(tbl_objectsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_objects ds = new ds_objects();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbl_objectsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbl_slaveGroupsDataTable : global::System.Data.TypedTableBase<tbl_slaveGroupsRow> {
            
            private global::System.Data.DataColumn columnslaveGroup_id;
            
            private global::System.Data.DataColumn columnmasterGroup_id;
            
            private global::System.Data.DataColumn columnslaveGroup_title;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_slaveGroupsDataTable() {
                this.TableName = "tbl_slaveGroups";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_slaveGroupsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbl_slaveGroupsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slaveGroup_idColumn {
                get {
                    return this.columnslaveGroup_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn masterGroup_idColumn {
                get {
                    return this.columnmasterGroup_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slaveGroup_titleColumn {
                get {
                    return this.columnslaveGroup_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_slaveGroupsRow this[int index] {
                get {
                    return ((tbl_slaveGroupsRow)(this.Rows[index]));
                }
            }
            
            public event tbl_slaveGroupsRowChangeEventHandler tbl_slaveGroupsRowChanging;
            
            public event tbl_slaveGroupsRowChangeEventHandler tbl_slaveGroupsRowChanged;
            
            public event tbl_slaveGroupsRowChangeEventHandler tbl_slaveGroupsRowDeleting;
            
            public event tbl_slaveGroupsRowChangeEventHandler tbl_slaveGroupsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtbl_slaveGroupsRow(tbl_slaveGroupsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_slaveGroupsRow Addtbl_slaveGroupsRow(tbl_masterGroupsRow parenttbl_masterGroupsRowByFK_tbl_slaveGroups_tbl_masterGroups, string slaveGroup_title) {
                tbl_slaveGroupsRow rowtbl_slaveGroupsRow = ((tbl_slaveGroupsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        slaveGroup_title};
                if ((parenttbl_masterGroupsRowByFK_tbl_slaveGroups_tbl_masterGroups != null)) {
                    columnValuesArray[1] = parenttbl_masterGroupsRowByFK_tbl_slaveGroups_tbl_masterGroups[0];
                }
                rowtbl_slaveGroupsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbl_slaveGroupsRow);
                return rowtbl_slaveGroupsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_slaveGroupsRow FindByslaveGroup_id(int slaveGroup_id) {
                return ((tbl_slaveGroupsRow)(this.Rows.Find(new object[] {
                            slaveGroup_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbl_slaveGroupsDataTable cln = ((tbl_slaveGroupsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbl_slaveGroupsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnslaveGroup_id = base.Columns["slaveGroup_id"];
                this.columnmasterGroup_id = base.Columns["masterGroup_id"];
                this.columnslaveGroup_title = base.Columns["slaveGroup_title"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnslaveGroup_id = new global::System.Data.DataColumn("slaveGroup_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslaveGroup_id);
                this.columnmasterGroup_id = new global::System.Data.DataColumn("masterGroup_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmasterGroup_id);
                this.columnslaveGroup_title = new global::System.Data.DataColumn("slaveGroup_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslaveGroup_title);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnslaveGroup_id}, true));
                this.columnslaveGroup_id.AutoIncrement = true;
                this.columnslaveGroup_id.AutoIncrementSeed = -1;
                this.columnslaveGroup_id.AutoIncrementStep = -1;
                this.columnslaveGroup_id.AllowDBNull = false;
                this.columnslaveGroup_id.ReadOnly = true;
                this.columnslaveGroup_id.Unique = true;
                this.columnmasterGroup_id.AllowDBNull = false;
                this.columnslaveGroup_title.AllowDBNull = false;
                this.columnslaveGroup_title.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_slaveGroupsRow Newtbl_slaveGroupsRow() {
                return ((tbl_slaveGroupsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbl_slaveGroupsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbl_slaveGroupsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbl_slaveGroupsRowChanged != null)) {
                    this.tbl_slaveGroupsRowChanged(this, new tbl_slaveGroupsRowChangeEvent(((tbl_slaveGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbl_slaveGroupsRowChanging != null)) {
                    this.tbl_slaveGroupsRowChanging(this, new tbl_slaveGroupsRowChangeEvent(((tbl_slaveGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbl_slaveGroupsRowDeleted != null)) {
                    this.tbl_slaveGroupsRowDeleted(this, new tbl_slaveGroupsRowChangeEvent(((tbl_slaveGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbl_slaveGroupsRowDeleting != null)) {
                    this.tbl_slaveGroupsRowDeleting(this, new tbl_slaveGroupsRowChangeEvent(((tbl_slaveGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetbl_slaveGroupsRow(tbl_slaveGroupsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_objects ds = new ds_objects();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbl_slaveGroupsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbl_masterGroupsRow : global::System.Data.DataRow {
            
            private tbl_masterGroupsDataTable tabletbl_masterGroups;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_masterGroupsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbl_masterGroups = ((tbl_masterGroupsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int masterGroup_id {
                get {
                    return ((int)(this[this.tabletbl_masterGroups.masterGroup_idColumn]));
                }
                set {
                    this[this.tabletbl_masterGroups.masterGroup_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string masterGroup_title {
                get {
                    return ((string)(this[this.tabletbl_masterGroups.masterGroup_titleColumn]));
                }
                set {
                    this[this.tabletbl_masterGroups.masterGroup_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_slaveGroupsRow[] Gettbl_slaveGroupsRows() {
                if ((this.Table.ChildRelations["FK_tbl_slaveGroups_tbl_masterGroups"] == null)) {
                    return new tbl_slaveGroupsRow[0];
                }
                else {
                    return ((tbl_slaveGroupsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tbl_slaveGroups_tbl_masterGroups"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbl_objectsRow : global::System.Data.DataRow {
            
            private tbl_objectsDataTable tabletbl_objects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_objectsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbl_objects = ((tbl_objectsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int object_id {
                get {
                    return ((int)(this[this.tabletbl_objects.object_idColumn]));
                }
                set {
                    this[this.tabletbl_objects.object_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int store_id {
                get {
                    return ((int)(this[this.tabletbl_objects.store_idColumn]));
                }
                set {
                    this[this.tabletbl_objects.store_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int slaveGroup_id {
                get {
                    return ((int)(this[this.tabletbl_objects.slaveGroup_idColumn]));
                }
                set {
                    this[this.tabletbl_objects.slaveGroup_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string object_title {
                get {
                    return ((string)(this[this.tabletbl_objects.object_titleColumn]));
                }
                set {
                    this[this.tabletbl_objects.object_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short object_unit {
                get {
                    return ((short)(this[this.tabletbl_objects.object_unitColumn]));
                }
                set {
                    this[this.tabletbl_objects.object_unitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int object_unitCount {
                get {
                    return ((int)(this[this.tabletbl_objects.object_unitCountColumn]));
                }
                set {
                    this[this.tabletbl_objects.object_unitCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int object_totalCount {
                get {
                    return ((int)(this[this.tabletbl_objects.object_totalCountColumn]));
                }
                set {
                    this[this.tabletbl_objects.object_totalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long object_buyPriceAvg {
                get {
                    try {
                        return ((long)(this[this.tabletbl_objects.object_buyPriceAvgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'object_buyPriceAvg\' in table \'tbl_objects\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_objects.object_buyPriceAvgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long object_lastBuyPrice {
                get {
                    try {
                        return ((long)(this[this.tabletbl_objects.object_lastBuyPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'object_lastBuyPrice\' in table \'tbl_objects\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_objects.object_lastBuyPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string object_date {
                get {
                    return ((string)(this[this.tabletbl_objects.object_dateColumn]));
                }
                set {
                    this[this.tabletbl_objects.object_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string object_expireDate {
                get {
                    return ((string)(this[this.tabletbl_objects.object_expireDateColumn]));
                }
                set {
                    this[this.tabletbl_objects.object_expireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int object_lessSell {
                get {
                    return ((int)(this[this.tabletbl_objects.object_lessSellColumn]));
                }
                set {
                    this[this.tabletbl_objects.object_lessSellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int object_alarmRange {
                get {
                    return ((int)(this[this.tabletbl_objects.object_alarmRangeColumn]));
                }
                set {
                    this[this.tabletbl_objects.object_alarmRangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string object_comment1 {
                get {
                    try {
                        return ((string)(this[this.tabletbl_objects.object_comment1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'object_comment1\' in table \'tbl_objects\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_objects.object_comment1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string object_comment2 {
                get {
                    try {
                        return ((string)(this[this.tabletbl_objects.object_comment2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'object_comment2\' in table \'tbl_objects\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_objects.object_comment2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string object_comment3 {
                get {
                    try {
                        return ((string)(this[this.tabletbl_objects.object_comment3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'object_comment3\' in table \'tbl_objects\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_objects.object_comment3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_slaveGroupsRow tbl_slaveGroupsRow {
                get {
                    return ((tbl_slaveGroupsRow)(this.GetParentRow(this.Table.ParentRelations["FK_tbl_objects_tbl_slaveGroups"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tbl_objects_tbl_slaveGroups"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isobject_buyPriceAvgNull() {
                return this.IsNull(this.tabletbl_objects.object_buyPriceAvgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setobject_buyPriceAvgNull() {
                this[this.tabletbl_objects.object_buyPriceAvgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isobject_lastBuyPriceNull() {
                return this.IsNull(this.tabletbl_objects.object_lastBuyPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setobject_lastBuyPriceNull() {
                this[this.tabletbl_objects.object_lastBuyPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isobject_comment1Null() {
                return this.IsNull(this.tabletbl_objects.object_comment1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setobject_comment1Null() {
                this[this.tabletbl_objects.object_comment1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isobject_comment2Null() {
                return this.IsNull(this.tabletbl_objects.object_comment2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setobject_comment2Null() {
                this[this.tabletbl_objects.object_comment2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isobject_comment3Null() {
                return this.IsNull(this.tabletbl_objects.object_comment3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setobject_comment3Null() {
                this[this.tabletbl_objects.object_comment3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbl_slaveGroupsRow : global::System.Data.DataRow {
            
            private tbl_slaveGroupsDataTable tabletbl_slaveGroups;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_slaveGroupsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbl_slaveGroups = ((tbl_slaveGroupsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int slaveGroup_id {
                get {
                    return ((int)(this[this.tabletbl_slaveGroups.slaveGroup_idColumn]));
                }
                set {
                    this[this.tabletbl_slaveGroups.slaveGroup_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int masterGroup_id {
                get {
                    return ((int)(this[this.tabletbl_slaveGroups.masterGroup_idColumn]));
                }
                set {
                    this[this.tabletbl_slaveGroups.masterGroup_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string slaveGroup_title {
                get {
                    return ((string)(this[this.tabletbl_slaveGroups.slaveGroup_titleColumn]));
                }
                set {
                    this[this.tabletbl_slaveGroups.slaveGroup_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_masterGroupsRow tbl_masterGroupsRow {
                get {
                    return ((tbl_masterGroupsRow)(this.GetParentRow(this.Table.ParentRelations["FK_tbl_slaveGroups_tbl_masterGroups"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tbl_slaveGroups_tbl_masterGroups"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_objectsRow[] Gettbl_objectsRows() {
                if ((this.Table.ChildRelations["FK_tbl_objects_tbl_slaveGroups"] == null)) {
                    return new tbl_objectsRow[0];
                }
                else {
                    return ((tbl_objectsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tbl_objects_tbl_slaveGroups"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbl_masterGroupsRowChangeEvent : global::System.EventArgs {
            
            private tbl_masterGroupsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_masterGroupsRowChangeEvent(tbl_masterGroupsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_masterGroupsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbl_objectsRowChangeEvent : global::System.EventArgs {
            
            private tbl_objectsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_objectsRowChangeEvent(tbl_objectsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_objectsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbl_slaveGroupsRowChangeEvent : global::System.EventArgs {
            
            private tbl_slaveGroupsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_slaveGroupsRowChangeEvent(tbl_slaveGroupsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_slaveGroupsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Novin.novinDBDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbl_masterGroupsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tbl_masterGroupsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbl_masterGroups";
            tableMapping.ColumnMappings.Add("masterGroup_id", "masterGroup_id");
            tableMapping.ColumnMappings.Add("masterGroup_title", "masterGroup_title");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_masterGroups] WHERE (([masterGroup_id] = @Original_masterG" +
                "roup_id) AND ([masterGroup_title] = @Original_masterGroup_title))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_masterGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_masterGroup_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_masterGroups] ([masterGroup_title]) VALUES (@masterGroup_t" +
                "itle);\r\nSELECT masterGroup_id, masterGroup_title FROM tbl_masterGroups WHERE (ma" +
                "sterGroup_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@masterGroup_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[tbl_masterGroups] SET [masterGroup_title] = @masterGroup_title WHERE (([masterGroup_id] = @Original_masterGroup_id) AND ([masterGroup_title] = @Original_masterGroup_title));
SELECT masterGroup_id, masterGroup_title FROM tbl_masterGroups WHERE (masterGroup_id = @masterGroup_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@masterGroup_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_masterGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_masterGroup_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@masterGroup_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT masterGroup_id, masterGroup_title FROM dbo.tbl_masterGroups";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_objects.tbl_masterGroupsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_objects.tbl_masterGroupsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_objects.tbl_masterGroupsDataTable dataTable = new ds_objects.tbl_masterGroupsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_objects.tbl_masterGroupsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_objects dataSet) {
            return this.Adapter.Update(dataSet, "tbl_masterGroups");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_masterGroup_id, string Original_masterGroup_title) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_masterGroup_id));
            if ((Original_masterGroup_title == null)) {
                throw new global::System.ArgumentNullException("Original_masterGroup_title");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_masterGroup_title));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string masterGroup_title) {
            if ((masterGroup_title == null)) {
                throw new global::System.ArgumentNullException("masterGroup_title");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(masterGroup_title));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string masterGroup_title, int Original_masterGroup_id, string Original_masterGroup_title, int masterGroup_id) {
            if ((masterGroup_title == null)) {
                throw new global::System.ArgumentNullException("masterGroup_title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(masterGroup_title));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_masterGroup_id));
            if ((Original_masterGroup_title == null)) {
                throw new global::System.ArgumentNullException("Original_masterGroup_title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_masterGroup_title));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(masterGroup_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string masterGroup_title, int Original_masterGroup_id, string Original_masterGroup_title) {
            return this.Update(masterGroup_title, Original_masterGroup_id, Original_masterGroup_title, Original_masterGroup_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbl_objectsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tbl_objectsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbl_objects";
            tableMapping.ColumnMappings.Add("object_id", "object_id");
            tableMapping.ColumnMappings.Add("store_id", "store_id");
            tableMapping.ColumnMappings.Add("slaveGroup_id", "slaveGroup_id");
            tableMapping.ColumnMappings.Add("object_title", "object_title");
            tableMapping.ColumnMappings.Add("object_unit", "object_unit");
            tableMapping.ColumnMappings.Add("object_unitCount", "object_unitCount");
            tableMapping.ColumnMappings.Add("object_totalCount", "object_totalCount");
            tableMapping.ColumnMappings.Add("object_buyPriceAvg", "object_buyPriceAvg");
            tableMapping.ColumnMappings.Add("object_lastBuyPrice", "object_lastBuyPrice");
            tableMapping.ColumnMappings.Add("object_date", "object_date");
            tableMapping.ColumnMappings.Add("object_expireDate", "object_expireDate");
            tableMapping.ColumnMappings.Add("object_lessSell", "object_lessSell");
            tableMapping.ColumnMappings.Add("object_alarmRange", "object_alarmRange");
            tableMapping.ColumnMappings.Add("object_comment1", "object_comment1");
            tableMapping.ColumnMappings.Add("object_comment2", "object_comment2");
            tableMapping.ColumnMappings.Add("object_comment3", "object_comment3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[tbl_objects] WHERE (([object_id] = @Original_object_id) AND ([store_id] = @Original_store_id) AND ([slaveGroup_id] = @Original_slaveGroup_id) AND ([object_title] = @Original_object_title) AND ([object_unit] = @Original_object_unit) AND ([object_unitCount] = @Original_object_unitCount) AND ([object_totalCount] = @Original_object_totalCount) AND ((@IsNull_object_buyPriceAvg = 1 AND [object_buyPriceAvg] IS NULL) OR ([object_buyPriceAvg] = @Original_object_buyPriceAvg)) AND ((@IsNull_object_lastBuyPrice = 1 AND [object_lastBuyPrice] IS NULL) OR ([object_lastBuyPrice] = @Original_object_lastBuyPrice)) AND ([object_date] = @Original_object_date) AND ([object_expireDate] = @Original_object_expireDate) AND ([object_lessSell] = @Original_object_lessSell) AND ([object_alarmRange] = @Original_object_alarmRange) AND ((@IsNull_object_comment1 = 1 AND [object_comment1] IS NULL) OR ([object_comment1] = @Original_object_comment1)) AND ((@IsNull_object_comment2 = 1 AND [object_comment2] IS NULL) OR ([object_comment2] = @Original_object_comment2)) AND ((@IsNull_object_comment3 = 1 AND [object_comment3] IS NULL) OR ([object_comment3] = @Original_object_comment3)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_store_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "store_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_slaveGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_unit", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_unitCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_totalCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_totalCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_object_buyPriceAvg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_buyPriceAvg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_buyPriceAvg", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_buyPriceAvg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_object_lastBuyPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_lastBuyPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_lastBuyPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_lastBuyPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_expireDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_expireDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_lessSell", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_lessSell", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_alarmRange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_alarmRange", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_object_comment1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_comment1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_object_comment2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_comment2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_object_comment3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_comment3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[tbl_objects] ([object_id], [store_id], [slaveGroup_id], [object_title], [object_unit], [object_unitCount], [object_totalCount], [object_buyPriceAvg], [object_lastBuyPrice], [object_date], [object_expireDate], [object_lessSell], [object_alarmRange], [object_comment1], [object_comment2], [object_comment3]) VALUES (@object_id, @store_id, @slaveGroup_id, @object_title, @object_unit, @object_unitCount, @object_totalCount, @object_buyPriceAvg, @object_lastBuyPrice, @object_date, @object_expireDate, @object_lessSell, @object_alarmRange, @object_comment1, @object_comment2, @object_comment3);
SELECT object_id, store_id, slaveGroup_id, object_title, object_unit, object_unitCount, object_totalCount, object_buyPriceAvg, object_lastBuyPrice, object_date, object_expireDate, object_lessSell, object_alarmRange, object_comment1, object_comment2, object_comment3 FROM tbl_objects WHERE (object_id = @object_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@store_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "store_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@slaveGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_unit", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_unitCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_totalCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_totalCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_buyPriceAvg", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_buyPriceAvg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_lastBuyPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_lastBuyPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_expireDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_expireDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_lessSell", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_lessSell", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_alarmRange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_alarmRange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_comment1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_comment2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_comment3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tbl_objects] SET [object_id] = @object_id, [store_id] = @store_id, " +
                "[slaveGroup_id] = @slaveGroup_id, [object_title] = @object_title, [object_unit] " +
                "= @object_unit, [object_unitCount] = @object_unitCount, [object_totalCount] = @o" +
                "bject_totalCount, [object_buyPriceAvg] = @object_buyPriceAvg, [object_lastBuyPri" +
                "ce] = @object_lastBuyPrice, [object_date] = @object_date, [object_expireDate] = " +
                "@object_expireDate, [object_lessSell] = @object_lessSell, [object_alarmRange] = " +
                "@object_alarmRange, [object_comment1] = @object_comment1, [object_comment2] = @o" +
                "bject_comment2, [object_comment3] = @object_comment3 WHERE (([object_id] = @Orig" +
                "inal_object_id) AND ([store_id] = @Original_store_id) AND ([slaveGroup_id] = @Or" +
                "iginal_slaveGroup_id) AND ([object_title] = @Original_object_title) AND ([object" +
                "_unit] = @Original_object_unit) AND ([object_unitCount] = @Original_object_unitC" +
                "ount) AND ([object_totalCount] = @Original_object_totalCount) AND ((@IsNull_obje" +
                "ct_buyPriceAvg = 1 AND [object_buyPriceAvg] IS NULL) OR ([object_buyPriceAvg] = " +
                "@Original_object_buyPriceAvg)) AND ((@IsNull_object_lastBuyPrice = 1 AND [object" +
                "_lastBuyPrice] IS NULL) OR ([object_lastBuyPrice] = @Original_object_lastBuyPric" +
                "e)) AND ([object_date] = @Original_object_date) AND ([object_expireDate] = @Orig" +
                "inal_object_expireDate) AND ([object_lessSell] = @Original_object_lessSell) AND " +
                "([object_alarmRange] = @Original_object_alarmRange) AND ((@IsNull_object_comment" +
                "1 = 1 AND [object_comment1] IS NULL) OR ([object_comment1] = @Original_object_co" +
                "mment1)) AND ((@IsNull_object_comment2 = 1 AND [object_comment2] IS NULL) OR ([o" +
                "bject_comment2] = @Original_object_comment2)) AND ((@IsNull_object_comment3 = 1 " +
                "AND [object_comment3] IS NULL) OR ([object_comment3] = @Original_object_comment3" +
                ")));\r\nSELECT object_id, store_id, slaveGroup_id, object_title, object_unit, obje" +
                "ct_unitCount, object_totalCount, object_buyPriceAvg, object_lastBuyPrice, object" +
                "_date, object_expireDate, object_lessSell, object_alarmRange, object_comment1, o" +
                "bject_comment2, object_comment3 FROM tbl_objects WHERE (object_id = @object_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@store_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "store_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@slaveGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_unit", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_unitCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_totalCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_totalCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_buyPriceAvg", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_buyPriceAvg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_lastBuyPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_lastBuyPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_expireDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_expireDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_lessSell", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_lessSell", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_alarmRange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_alarmRange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_comment1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_comment2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_comment3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_store_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "store_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_slaveGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_unit", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_unitCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_totalCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_totalCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_object_buyPriceAvg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_buyPriceAvg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_buyPriceAvg", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_buyPriceAvg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_object_lastBuyPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_lastBuyPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_lastBuyPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_lastBuyPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_expireDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_expireDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_lessSell", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_lessSell", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_alarmRange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_alarmRange", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_object_comment1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_comment1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_object_comment2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_comment2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_object_comment3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_comment3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_comment3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT object_id, store_id, slaveGroup_id, object_title, object_unit, object_unitCount, object_totalCount, object_buyPriceAvg, object_lastBuyPrice, object_date, object_expireDate, object_lessSell, object_alarmRange, object_comment1, object_comment2, object_comment3 FROM dbo.tbl_objects";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_objects.tbl_objectsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_objects.tbl_objectsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_objects.tbl_objectsDataTable dataTable = new ds_objects.tbl_objectsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_objects.tbl_objectsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_objects dataSet) {
            return this.Adapter.Update(dataSet, "tbl_objects");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_object_id, 
                    int Original_store_id, 
                    int Original_slaveGroup_id, 
                    string Original_object_title, 
                    short Original_object_unit, 
                    int Original_object_unitCount, 
                    int Original_object_totalCount, 
                    global::System.Nullable<long> Original_object_buyPriceAvg, 
                    global::System.Nullable<long> Original_object_lastBuyPrice, 
                    string Original_object_date, 
                    string Original_object_expireDate, 
                    int Original_object_lessSell, 
                    int Original_object_alarmRange, 
                    string Original_object_comment1, 
                    string Original_object_comment2, 
                    string Original_object_comment3) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_object_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_store_id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_slaveGroup_id));
            if ((Original_object_title == null)) {
                throw new global::System.ArgumentNullException("Original_object_title");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_object_title));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_object_unit));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_object_unitCount));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_object_totalCount));
            if ((Original_object_buyPriceAvg.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((long)(Original_object_buyPriceAvg.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_object_lastBuyPrice.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(Original_object_lastBuyPrice.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_object_date == null)) {
                throw new global::System.ArgumentNullException("Original_object_date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_object_date));
            }
            if ((Original_object_expireDate == null)) {
                throw new global::System.ArgumentNullException("Original_object_expireDate");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_object_expireDate));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_object_lessSell));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_object_alarmRange));
            if ((Original_object_comment1 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_object_comment1));
            }
            if ((Original_object_comment2 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_object_comment2));
            }
            if ((Original_object_comment3 == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_object_comment3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int object_id, 
                    int store_id, 
                    int slaveGroup_id, 
                    string object_title, 
                    short object_unit, 
                    int object_unitCount, 
                    int object_totalCount, 
                    global::System.Nullable<long> object_buyPriceAvg, 
                    global::System.Nullable<long> object_lastBuyPrice, 
                    string object_date, 
                    string object_expireDate, 
                    int object_lessSell, 
                    int object_alarmRange, 
                    string object_comment1, 
                    string object_comment2, 
                    string object_comment3) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(object_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(store_id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(slaveGroup_id));
            if ((object_title == null)) {
                throw new global::System.ArgumentNullException("object_title");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(object_title));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((short)(object_unit));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(object_unitCount));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(object_totalCount));
            if ((object_buyPriceAvg.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((long)(object_buyPriceAvg.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((object_lastBuyPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((long)(object_lastBuyPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((object_date == null)) {
                throw new global::System.ArgumentNullException("object_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(object_date));
            }
            if ((object_expireDate == null)) {
                throw new global::System.ArgumentNullException("object_expireDate");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(object_expireDate));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(object_lessSell));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(object_alarmRange));
            if ((object_comment1 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(object_comment1));
            }
            if ((object_comment2 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(object_comment2));
            }
            if ((object_comment3 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(object_comment3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int object_id, 
                    int store_id, 
                    int slaveGroup_id, 
                    string object_title, 
                    short object_unit, 
                    int object_unitCount, 
                    int object_totalCount, 
                    global::System.Nullable<long> object_buyPriceAvg, 
                    global::System.Nullable<long> object_lastBuyPrice, 
                    string object_date, 
                    string object_expireDate, 
                    int object_lessSell, 
                    int object_alarmRange, 
                    string object_comment1, 
                    string object_comment2, 
                    string object_comment3, 
                    int Original_object_id, 
                    int Original_store_id, 
                    int Original_slaveGroup_id, 
                    string Original_object_title, 
                    short Original_object_unit, 
                    int Original_object_unitCount, 
                    int Original_object_totalCount, 
                    global::System.Nullable<long> Original_object_buyPriceAvg, 
                    global::System.Nullable<long> Original_object_lastBuyPrice, 
                    string Original_object_date, 
                    string Original_object_expireDate, 
                    int Original_object_lessSell, 
                    int Original_object_alarmRange, 
                    string Original_object_comment1, 
                    string Original_object_comment2, 
                    string Original_object_comment3) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(object_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(store_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(slaveGroup_id));
            if ((object_title == null)) {
                throw new global::System.ArgumentNullException("object_title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(object_title));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(object_unit));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(object_unitCount));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(object_totalCount));
            if ((object_buyPriceAvg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(object_buyPriceAvg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((object_lastBuyPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(object_lastBuyPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((object_date == null)) {
                throw new global::System.ArgumentNullException("object_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(object_date));
            }
            if ((object_expireDate == null)) {
                throw new global::System.ArgumentNullException("object_expireDate");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(object_expireDate));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(object_lessSell));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(object_alarmRange));
            if ((object_comment1 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(object_comment1));
            }
            if ((object_comment2 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(object_comment2));
            }
            if ((object_comment3 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(object_comment3));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_object_id));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_store_id));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_slaveGroup_id));
            if ((Original_object_title == null)) {
                throw new global::System.ArgumentNullException("Original_object_title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_object_title));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((short)(Original_object_unit));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_object_unitCount));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_object_totalCount));
            if ((Original_object_buyPriceAvg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(Original_object_buyPriceAvg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_object_lastBuyPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((long)(Original_object_lastBuyPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_object_date == null)) {
                throw new global::System.ArgumentNullException("Original_object_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_object_date));
            }
            if ((Original_object_expireDate == null)) {
                throw new global::System.ArgumentNullException("Original_object_expireDate");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_object_expireDate));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_object_lessSell));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_object_alarmRange));
            if ((Original_object_comment1 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_object_comment1));
            }
            if ((Original_object_comment2 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_object_comment2));
            }
            if ((Original_object_comment3 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_object_comment3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int store_id, 
                    int slaveGroup_id, 
                    string object_title, 
                    short object_unit, 
                    int object_unitCount, 
                    int object_totalCount, 
                    global::System.Nullable<long> object_buyPriceAvg, 
                    global::System.Nullable<long> object_lastBuyPrice, 
                    string object_date, 
                    string object_expireDate, 
                    int object_lessSell, 
                    int object_alarmRange, 
                    string object_comment1, 
                    string object_comment2, 
                    string object_comment3, 
                    int Original_object_id, 
                    int Original_store_id, 
                    int Original_slaveGroup_id, 
                    string Original_object_title, 
                    short Original_object_unit, 
                    int Original_object_unitCount, 
                    int Original_object_totalCount, 
                    global::System.Nullable<long> Original_object_buyPriceAvg, 
                    global::System.Nullable<long> Original_object_lastBuyPrice, 
                    string Original_object_date, 
                    string Original_object_expireDate, 
                    int Original_object_lessSell, 
                    int Original_object_alarmRange, 
                    string Original_object_comment1, 
                    string Original_object_comment2, 
                    string Original_object_comment3) {
            return this.Update(Original_object_id, store_id, slaveGroup_id, object_title, object_unit, object_unitCount, object_totalCount, object_buyPriceAvg, object_lastBuyPrice, object_date, object_expireDate, object_lessSell, object_alarmRange, object_comment1, object_comment2, object_comment3, Original_object_id, Original_store_id, Original_slaveGroup_id, Original_object_title, Original_object_unit, Original_object_unitCount, Original_object_totalCount, Original_object_buyPriceAvg, Original_object_lastBuyPrice, Original_object_date, Original_object_expireDate, Original_object_lessSell, Original_object_alarmRange, Original_object_comment1, Original_object_comment2, Original_object_comment3);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbl_slaveGroupsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tbl_slaveGroupsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbl_slaveGroups";
            tableMapping.ColumnMappings.Add("slaveGroup_id", "slaveGroup_id");
            tableMapping.ColumnMappings.Add("masterGroup_id", "masterGroup_id");
            tableMapping.ColumnMappings.Add("slaveGroup_title", "slaveGroup_title");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tbl_slaveGroups] WHERE (([slaveGroup_id] = @Original_slaveGrou" +
                "p_id) AND ([masterGroup_id] = @Original_masterGroup_id) AND ([slaveGroup_title] " +
                "= @Original_slaveGroup_title))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_slaveGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_masterGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_slaveGroup_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tbl_slaveGroups] ([masterGroup_id], [slaveGroup_title]) VALUES" +
                " (@masterGroup_id, @slaveGroup_title);\r\nSELECT slaveGroup_id, masterGroup_id, sl" +
                "aveGroup_title FROM tbl_slaveGroups WHERE (slaveGroup_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@masterGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@slaveGroup_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[tbl_slaveGroups] SET [masterGroup_id] = @masterGroup_id, [slaveGroup_title] = @slaveGroup_title WHERE (([slaveGroup_id] = @Original_slaveGroup_id) AND ([masterGroup_id] = @Original_masterGroup_id) AND ([slaveGroup_title] = @Original_slaveGroup_title));
SELECT slaveGroup_id, masterGroup_id, slaveGroup_title FROM tbl_slaveGroups WHERE (slaveGroup_id = @slaveGroup_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@masterGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@slaveGroup_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_slaveGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_masterGroup_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "masterGroup_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_slaveGroup_title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@slaveGroup_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "slaveGroup_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT slaveGroup_id, masterGroup_id, slaveGroup_title FROM dbo.tbl_slaveGroups";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_objects.tbl_slaveGroupsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_objects.tbl_slaveGroupsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_objects.tbl_slaveGroupsDataTable dataTable = new ds_objects.tbl_slaveGroupsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_objects.tbl_slaveGroupsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_objects dataSet) {
            return this.Adapter.Update(dataSet, "tbl_slaveGroups");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_slaveGroup_id, int Original_masterGroup_id, string Original_slaveGroup_title) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_slaveGroup_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_masterGroup_id));
            if ((Original_slaveGroup_title == null)) {
                throw new global::System.ArgumentNullException("Original_slaveGroup_title");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_slaveGroup_title));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int masterGroup_id, string slaveGroup_title) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(masterGroup_id));
            if ((slaveGroup_title == null)) {
                throw new global::System.ArgumentNullException("slaveGroup_title");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(slaveGroup_title));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int masterGroup_id, string slaveGroup_title, int Original_slaveGroup_id, int Original_masterGroup_id, string Original_slaveGroup_title, int slaveGroup_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(masterGroup_id));
            if ((slaveGroup_title == null)) {
                throw new global::System.ArgumentNullException("slaveGroup_title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(slaveGroup_title));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_slaveGroup_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_masterGroup_id));
            if ((Original_slaveGroup_title == null)) {
                throw new global::System.ArgumentNullException("Original_slaveGroup_title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_slaveGroup_title));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(slaveGroup_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int masterGroup_id, string slaveGroup_title, int Original_slaveGroup_id, int Original_masterGroup_id, string Original_slaveGroup_title) {
            return this.Update(masterGroup_id, slaveGroup_title, Original_slaveGroup_id, Original_masterGroup_id, Original_slaveGroup_title, Original_slaveGroup_id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private tbl_masterGroupsTableAdapter _tbl_masterGroupsTableAdapter;
        
        private tbl_objectsTableAdapter _tbl_objectsTableAdapter;
        
        private tbl_slaveGroupsTableAdapter _tbl_slaveGroupsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tbl_masterGroupsTableAdapter tbl_masterGroupsTableAdapter {
            get {
                return this._tbl_masterGroupsTableAdapter;
            }
            set {
                this._tbl_masterGroupsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tbl_objectsTableAdapter tbl_objectsTableAdapter {
            get {
                return this._tbl_objectsTableAdapter;
            }
            set {
                this._tbl_objectsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tbl_slaveGroupsTableAdapter tbl_slaveGroupsTableAdapter {
            get {
                return this._tbl_slaveGroupsTableAdapter;
            }
            set {
                this._tbl_slaveGroupsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tbl_masterGroupsTableAdapter != null) 
                            && (this._tbl_masterGroupsTableAdapter.Connection != null))) {
                    return this._tbl_masterGroupsTableAdapter.Connection;
                }
                if (((this._tbl_objectsTableAdapter != null) 
                            && (this._tbl_objectsTableAdapter.Connection != null))) {
                    return this._tbl_objectsTableAdapter.Connection;
                }
                if (((this._tbl_slaveGroupsTableAdapter != null) 
                            && (this._tbl_slaveGroupsTableAdapter.Connection != null))) {
                    return this._tbl_slaveGroupsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tbl_masterGroupsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tbl_objectsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tbl_slaveGroupsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(ds_objects dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tbl_masterGroupsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbl_masterGroups.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_masterGroupsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tbl_slaveGroupsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbl_slaveGroups.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_slaveGroupsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tbl_objectsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbl_objects.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_objectsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(ds_objects dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tbl_masterGroupsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbl_masterGroups.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_masterGroupsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tbl_slaveGroupsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbl_slaveGroups.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_slaveGroupsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tbl_objectsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbl_objects.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_objectsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(ds_objects dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tbl_objectsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbl_objects.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_objectsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tbl_slaveGroupsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbl_slaveGroups.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_slaveGroupsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tbl_masterGroupsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbl_masterGroups.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_masterGroupsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(ds_objects dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tbl_masterGroupsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_masterGroupsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tbl_objectsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_objectsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tbl_slaveGroupsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_slaveGroupsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tbl_masterGroupsTableAdapter != null)) {
                    revertConnections.Add(this._tbl_masterGroupsTableAdapter, this._tbl_masterGroupsTableAdapter.Connection);
                    this._tbl_masterGroupsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_masterGroupsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_masterGroupsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_masterGroupsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_masterGroupsTableAdapter.Adapter);
                    }
                }
                if ((this._tbl_objectsTableAdapter != null)) {
                    revertConnections.Add(this._tbl_objectsTableAdapter, this._tbl_objectsTableAdapter.Connection);
                    this._tbl_objectsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_objectsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_objectsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_objectsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_objectsTableAdapter.Adapter);
                    }
                }
                if ((this._tbl_slaveGroupsTableAdapter != null)) {
                    revertConnections.Add(this._tbl_slaveGroupsTableAdapter, this._tbl_slaveGroupsTableAdapter.Connection);
                    this._tbl_slaveGroupsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_slaveGroupsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_slaveGroupsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_slaveGroupsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_slaveGroupsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tbl_masterGroupsTableAdapter != null)) {
                    this._tbl_masterGroupsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_masterGroupsTableAdapter]));
                    this._tbl_masterGroupsTableAdapter.Transaction = null;
                }
                if ((this._tbl_objectsTableAdapter != null)) {
                    this._tbl_objectsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_objectsTableAdapter]));
                    this._tbl_objectsTableAdapter.Transaction = null;
                }
                if ((this._tbl_slaveGroupsTableAdapter != null)) {
                    this._tbl_slaveGroupsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_slaveGroupsTableAdapter]));
                    this._tbl_slaveGroupsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591