//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4959
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Novin {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds_wastedInvoices")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_wastedInvoices : global::System.Data.DataSet {
        
        private tbl_accDocsDataTable tabletbl_accDocs;
        
        private viw_itemsWastedDataTable tableviw_itemsWasted;
        
        private tbl_invoicesWastedDataTable tabletbl_invoicesWasted;
        
        private tbl_itemsWastedDataTable tabletbl_itemsWasted;
        
        private global::System.Data.DataRelation relationFK_tbl_invoicesWasted_tbl_accDocs1;
        
        private global::System.Data.DataRelation relationFK_tbl_itemsWasted_tbl_invoicesWasted;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ds_wastedInvoices() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ds_wastedInvoices(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tbl_accDocs"] != null)) {
                    base.Tables.Add(new tbl_accDocsDataTable(ds.Tables["tbl_accDocs"]));
                }
                if ((ds.Tables["viw_itemsWasted"] != null)) {
                    base.Tables.Add(new viw_itemsWastedDataTable(ds.Tables["viw_itemsWasted"]));
                }
                if ((ds.Tables["tbl_invoicesWasted"] != null)) {
                    base.Tables.Add(new tbl_invoicesWastedDataTable(ds.Tables["tbl_invoicesWasted"]));
                }
                if ((ds.Tables["tbl_itemsWasted"] != null)) {
                    base.Tables.Add(new tbl_itemsWastedDataTable(ds.Tables["tbl_itemsWasted"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbl_accDocsDataTable tbl_accDocs {
            get {
                return this.tabletbl_accDocs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public viw_itemsWastedDataTable viw_itemsWasted {
            get {
                return this.tableviw_itemsWasted;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbl_invoicesWastedDataTable tbl_invoicesWasted {
            get {
                return this.tabletbl_invoicesWasted;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbl_itemsWastedDataTable tbl_itemsWasted {
            get {
                return this.tabletbl_itemsWasted;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ds_wastedInvoices cln = ((ds_wastedInvoices)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tbl_accDocs"] != null)) {
                    base.Tables.Add(new tbl_accDocsDataTable(ds.Tables["tbl_accDocs"]));
                }
                if ((ds.Tables["viw_itemsWasted"] != null)) {
                    base.Tables.Add(new viw_itemsWastedDataTable(ds.Tables["viw_itemsWasted"]));
                }
                if ((ds.Tables["tbl_invoicesWasted"] != null)) {
                    base.Tables.Add(new tbl_invoicesWastedDataTable(ds.Tables["tbl_invoicesWasted"]));
                }
                if ((ds.Tables["tbl_itemsWasted"] != null)) {
                    base.Tables.Add(new tbl_itemsWastedDataTable(ds.Tables["tbl_itemsWasted"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletbl_accDocs = ((tbl_accDocsDataTable)(base.Tables["tbl_accDocs"]));
            if ((initTable == true)) {
                if ((this.tabletbl_accDocs != null)) {
                    this.tabletbl_accDocs.InitVars();
                }
            }
            this.tableviw_itemsWasted = ((viw_itemsWastedDataTable)(base.Tables["viw_itemsWasted"]));
            if ((initTable == true)) {
                if ((this.tableviw_itemsWasted != null)) {
                    this.tableviw_itemsWasted.InitVars();
                }
            }
            this.tabletbl_invoicesWasted = ((tbl_invoicesWastedDataTable)(base.Tables["tbl_invoicesWasted"]));
            if ((initTable == true)) {
                if ((this.tabletbl_invoicesWasted != null)) {
                    this.tabletbl_invoicesWasted.InitVars();
                }
            }
            this.tabletbl_itemsWasted = ((tbl_itemsWastedDataTable)(base.Tables["tbl_itemsWasted"]));
            if ((initTable == true)) {
                if ((this.tabletbl_itemsWasted != null)) {
                    this.tabletbl_itemsWasted.InitVars();
                }
            }
            this.relationFK_tbl_invoicesWasted_tbl_accDocs1 = this.Relations["FK_tbl_invoicesWasted_tbl_accDocs1"];
            this.relationFK_tbl_itemsWasted_tbl_invoicesWasted = this.Relations["FK_tbl_itemsWasted_tbl_invoicesWasted"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ds_wastedInvoices";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds_wastedInvoices.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletbl_accDocs = new tbl_accDocsDataTable();
            base.Tables.Add(this.tabletbl_accDocs);
            this.tableviw_itemsWasted = new viw_itemsWastedDataTable();
            base.Tables.Add(this.tableviw_itemsWasted);
            this.tabletbl_invoicesWasted = new tbl_invoicesWastedDataTable();
            base.Tables.Add(this.tabletbl_invoicesWasted);
            this.tabletbl_itemsWasted = new tbl_itemsWastedDataTable();
            base.Tables.Add(this.tabletbl_itemsWasted);
            this.relationFK_tbl_invoicesWasted_tbl_accDocs1 = new global::System.Data.DataRelation("FK_tbl_invoicesWasted_tbl_accDocs1", new global::System.Data.DataColumn[] {
                        this.tabletbl_accDocs.accDoc_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletbl_invoicesWasted.accDoc_idColumn}, false);
            this.Relations.Add(this.relationFK_tbl_invoicesWasted_tbl_accDocs1);
            this.relationFK_tbl_itemsWasted_tbl_invoicesWasted = new global::System.Data.DataRelation("FK_tbl_itemsWasted_tbl_invoicesWasted", new global::System.Data.DataColumn[] {
                        this.tabletbl_invoicesWasted.invoiceWasted_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletbl_itemsWasted.invoiceWasted_idColumn}, false);
            this.Relations.Add(this.relationFK_tbl_itemsWasted_tbl_invoicesWasted);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbl_accDocs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeviw_itemsWasted() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbl_invoicesWasted() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetbl_itemsWasted() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_wastedInvoices ds = new ds_wastedInvoices();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tbl_accDocsRowChangeEventHandler(object sender, tbl_accDocsRowChangeEvent e);
        
        public delegate void viw_itemsWastedRowChangeEventHandler(object sender, viw_itemsWastedRowChangeEvent e);
        
        public delegate void tbl_invoicesWastedRowChangeEventHandler(object sender, tbl_invoicesWastedRowChangeEvent e);
        
        public delegate void tbl_itemsWastedRowChangeEventHandler(object sender, tbl_itemsWastedRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbl_accDocsDataTable : global::System.Data.TypedTableBase<tbl_accDocsRow> {
            
            private global::System.Data.DataColumn columnaccDoc_id;
            
            private global::System.Data.DataColumn columnaccDoc_price;
            
            private global::System.Data.DataColumn columnaccDoc_date;
            
            private global::System.Data.DataColumn columnaccDoc_comment;
            
            private global::System.Data.DataColumn columnaccDoc_isItPerm;
            
            private global::System.Data.DataColumn columnaccDoc_deleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsDataTable() {
                this.TableName = "tbl_accDocs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_accDocsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbl_accDocsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_idColumn {
                get {
                    return this.columnaccDoc_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_priceColumn {
                get {
                    return this.columnaccDoc_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_dateColumn {
                get {
                    return this.columnaccDoc_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_commentColumn {
                get {
                    return this.columnaccDoc_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_isItPermColumn {
                get {
                    return this.columnaccDoc_isItPerm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_deletedColumn {
                get {
                    return this.columnaccDoc_deleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow this[int index] {
                get {
                    return ((tbl_accDocsRow)(this.Rows[index]));
                }
            }
            
            public event tbl_accDocsRowChangeEventHandler tbl_accDocsRowChanging;
            
            public event tbl_accDocsRowChangeEventHandler tbl_accDocsRowChanged;
            
            public event tbl_accDocsRowChangeEventHandler tbl_accDocsRowDeleting;
            
            public event tbl_accDocsRowChangeEventHandler tbl_accDocsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtbl_accDocsRow(tbl_accDocsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow Addtbl_accDocsRow(int accDoc_id, long accDoc_price, string accDoc_date, string accDoc_comment, bool accDoc_isItPerm, bool accDoc_deleted) {
                tbl_accDocsRow rowtbl_accDocsRow = ((tbl_accDocsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        accDoc_id,
                        accDoc_price,
                        accDoc_date,
                        accDoc_comment,
                        accDoc_isItPerm,
                        accDoc_deleted};
                rowtbl_accDocsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbl_accDocsRow);
                return rowtbl_accDocsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow FindByaccDoc_id(int accDoc_id) {
                return ((tbl_accDocsRow)(this.Rows.Find(new object[] {
                            accDoc_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbl_accDocsDataTable cln = ((tbl_accDocsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbl_accDocsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnaccDoc_id = base.Columns["accDoc_id"];
                this.columnaccDoc_price = base.Columns["accDoc_price"];
                this.columnaccDoc_date = base.Columns["accDoc_date"];
                this.columnaccDoc_comment = base.Columns["accDoc_comment"];
                this.columnaccDoc_isItPerm = base.Columns["accDoc_isItPerm"];
                this.columnaccDoc_deleted = base.Columns["accDoc_deleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnaccDoc_id = new global::System.Data.DataColumn("accDoc_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_id);
                this.columnaccDoc_price = new global::System.Data.DataColumn("accDoc_price", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_price);
                this.columnaccDoc_date = new global::System.Data.DataColumn("accDoc_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_date);
                this.columnaccDoc_comment = new global::System.Data.DataColumn("accDoc_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_comment);
                this.columnaccDoc_isItPerm = new global::System.Data.DataColumn("accDoc_isItPerm", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_isItPerm);
                this.columnaccDoc_deleted = new global::System.Data.DataColumn("accDoc_deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_deleted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnaccDoc_id}, true));
                this.columnaccDoc_id.AllowDBNull = false;
                this.columnaccDoc_id.Unique = true;
                this.columnaccDoc_price.AllowDBNull = false;
                this.columnaccDoc_date.AllowDBNull = false;
                this.columnaccDoc_date.MaxLength = 50;
                this.columnaccDoc_comment.MaxLength = 150;
                this.columnaccDoc_isItPerm.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow Newtbl_accDocsRow() {
                return ((tbl_accDocsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbl_accDocsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbl_accDocsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbl_accDocsRowChanged != null)) {
                    this.tbl_accDocsRowChanged(this, new tbl_accDocsRowChangeEvent(((tbl_accDocsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbl_accDocsRowChanging != null)) {
                    this.tbl_accDocsRowChanging(this, new tbl_accDocsRowChangeEvent(((tbl_accDocsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbl_accDocsRowDeleted != null)) {
                    this.tbl_accDocsRowDeleted(this, new tbl_accDocsRowChangeEvent(((tbl_accDocsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbl_accDocsRowDeleting != null)) {
                    this.tbl_accDocsRowDeleting(this, new tbl_accDocsRowChangeEvent(((tbl_accDocsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetbl_accDocsRow(tbl_accDocsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_wastedInvoices ds = new ds_wastedInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbl_accDocsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class viw_itemsWastedDataTable : global::System.Data.TypedTableBase<viw_itemsWastedRow> {
            
            private global::System.Data.DataColumn columninvoiceWasted_id;
            
            private global::System.Data.DataColumn columnobjectTitle;
            
            private global::System.Data.DataColumn columnobjectUnit_title;
            
            private global::System.Data.DataColumn columnitemWasted_unitCount;
            
            private global::System.Data.DataColumn columnitemWasted_retailCount;
            
            private global::System.Data.DataColumn columnobjectTotalCount;
            
            private global::System.Data.DataColumn columnobject_retailInUnit;
            
            private global::System.Data.DataColumn columnitemWasted_retailPrice;
            
            private global::System.Data.DataColumn columnobjectTotalPrice;
            
            private global::System.Data.DataColumn columnitemWasted_comment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsWastedDataTable() {
                this.TableName = "viw_itemsWasted";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal viw_itemsWastedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected viw_itemsWastedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceWasted_idColumn {
                get {
                    return this.columninvoiceWasted_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn objectTitleColumn {
                get {
                    return this.columnobjectTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn objectUnit_titleColumn {
                get {
                    return this.columnobjectUnit_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemWasted_unitCountColumn {
                get {
                    return this.columnitemWasted_unitCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemWasted_retailCountColumn {
                get {
                    return this.columnitemWasted_retailCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn objectTotalCountColumn {
                get {
                    return this.columnobjectTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_retailInUnitColumn {
                get {
                    return this.columnobject_retailInUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemWasted_retailPriceColumn {
                get {
                    return this.columnitemWasted_retailPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn objectTotalPriceColumn {
                get {
                    return this.columnobjectTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemWasted_commentColumn {
                get {
                    return this.columnitemWasted_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsWastedRow this[int index] {
                get {
                    return ((viw_itemsWastedRow)(this.Rows[index]));
                }
            }
            
            public event viw_itemsWastedRowChangeEventHandler viw_itemsWastedRowChanging;
            
            public event viw_itemsWastedRowChangeEventHandler viw_itemsWastedRowChanged;
            
            public event viw_itemsWastedRowChangeEventHandler viw_itemsWastedRowDeleting;
            
            public event viw_itemsWastedRowChangeEventHandler viw_itemsWastedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addviw_itemsWastedRow(viw_itemsWastedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsWastedRow Addviw_itemsWastedRow(int invoiceWasted_id, string objectTitle, string objectUnit_title, int itemWasted_unitCount, int itemWasted_retailCount, int objectTotalCount, int object_retailInUnit, long itemWasted_retailPrice, long objectTotalPrice, string itemWasted_comment) {
                viw_itemsWastedRow rowviw_itemsWastedRow = ((viw_itemsWastedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        invoiceWasted_id,
                        objectTitle,
                        objectUnit_title,
                        itemWasted_unitCount,
                        itemWasted_retailCount,
                        objectTotalCount,
                        object_retailInUnit,
                        itemWasted_retailPrice,
                        objectTotalPrice,
                        itemWasted_comment};
                rowviw_itemsWastedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowviw_itemsWastedRow);
                return rowviw_itemsWastedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                viw_itemsWastedDataTable cln = ((viw_itemsWastedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new viw_itemsWastedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columninvoiceWasted_id = base.Columns["invoiceWasted_id"];
                this.columnobjectTitle = base.Columns["objectTitle"];
                this.columnobjectUnit_title = base.Columns["objectUnit_title"];
                this.columnitemWasted_unitCount = base.Columns["itemWasted_unitCount"];
                this.columnitemWasted_retailCount = base.Columns["itemWasted_retailCount"];
                this.columnobjectTotalCount = base.Columns["objectTotalCount"];
                this.columnobject_retailInUnit = base.Columns["object_retailInUnit"];
                this.columnitemWasted_retailPrice = base.Columns["itemWasted_retailPrice"];
                this.columnobjectTotalPrice = base.Columns["objectTotalPrice"];
                this.columnitemWasted_comment = base.Columns["itemWasted_comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columninvoiceWasted_id = new global::System.Data.DataColumn("invoiceWasted_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceWasted_id);
                this.columnobjectTitle = new global::System.Data.DataColumn("objectTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectTitle);
                this.columnobjectUnit_title = new global::System.Data.DataColumn("objectUnit_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectUnit_title);
                this.columnitemWasted_unitCount = new global::System.Data.DataColumn("itemWasted_unitCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemWasted_unitCount);
                this.columnitemWasted_retailCount = new global::System.Data.DataColumn("itemWasted_retailCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemWasted_retailCount);
                this.columnobjectTotalCount = new global::System.Data.DataColumn("objectTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectTotalCount);
                this.columnobject_retailInUnit = new global::System.Data.DataColumn("object_retailInUnit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_retailInUnit);
                this.columnitemWasted_retailPrice = new global::System.Data.DataColumn("itemWasted_retailPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemWasted_retailPrice);
                this.columnobjectTotalPrice = new global::System.Data.DataColumn("objectTotalPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectTotalPrice);
                this.columnitemWasted_comment = new global::System.Data.DataColumn("itemWasted_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemWasted_comment);
                this.columninvoiceWasted_id.AllowDBNull = false;
                this.columnobjectTitle.ReadOnly = true;
                this.columnobjectTitle.MaxLength = 101;
                this.columnobjectUnit_title.AllowDBNull = false;
                this.columnobjectUnit_title.MaxLength = 50;
                this.columnitemWasted_unitCount.AllowDBNull = false;
                this.columnitemWasted_retailCount.AllowDBNull = false;
                this.columnobjectTotalCount.ReadOnly = true;
                this.columnobject_retailInUnit.AllowDBNull = false;
                this.columnitemWasted_retailPrice.AllowDBNull = false;
                this.columnobjectTotalPrice.ReadOnly = true;
                this.columnitemWasted_comment.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsWastedRow Newviw_itemsWastedRow() {
                return ((viw_itemsWastedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new viw_itemsWastedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(viw_itemsWastedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.viw_itemsWastedRowChanged != null)) {
                    this.viw_itemsWastedRowChanged(this, new viw_itemsWastedRowChangeEvent(((viw_itemsWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.viw_itemsWastedRowChanging != null)) {
                    this.viw_itemsWastedRowChanging(this, new viw_itemsWastedRowChangeEvent(((viw_itemsWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.viw_itemsWastedRowDeleted != null)) {
                    this.viw_itemsWastedRowDeleted(this, new viw_itemsWastedRowChangeEvent(((viw_itemsWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.viw_itemsWastedRowDeleting != null)) {
                    this.viw_itemsWastedRowDeleting(this, new viw_itemsWastedRowChangeEvent(((viw_itemsWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeviw_itemsWastedRow(viw_itemsWastedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_wastedInvoices ds = new ds_wastedInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "viw_itemsWastedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbl_invoicesWastedDataTable : global::System.Data.TypedTableBase<tbl_invoicesWastedRow> {
            
            private global::System.Data.DataColumn columninvoiceWasted_id;
            
            private global::System.Data.DataColumn columnaccDoc_id;
            
            private global::System.Data.DataColumn columninvoiceWasted_date;
            
            private global::System.Data.DataColumn columninvoiceWasted_totalPrice;
            
            private global::System.Data.DataColumn columninvoiceWasted_comment;
            
            private global::System.Data.DataColumn columninvoiceWasted_deleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesWastedDataTable() {
                this.TableName = "tbl_invoicesWasted";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_invoicesWastedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbl_invoicesWastedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceWasted_idColumn {
                get {
                    return this.columninvoiceWasted_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accDoc_idColumn {
                get {
                    return this.columnaccDoc_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceWasted_dateColumn {
                get {
                    return this.columninvoiceWasted_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceWasted_totalPriceColumn {
                get {
                    return this.columninvoiceWasted_totalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceWasted_commentColumn {
                get {
                    return this.columninvoiceWasted_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceWasted_deletedColumn {
                get {
                    return this.columninvoiceWasted_deleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesWastedRow this[int index] {
                get {
                    return ((tbl_invoicesWastedRow)(this.Rows[index]));
                }
            }
            
            public event tbl_invoicesWastedRowChangeEventHandler tbl_invoicesWastedRowChanging;
            
            public event tbl_invoicesWastedRowChangeEventHandler tbl_invoicesWastedRowChanged;
            
            public event tbl_invoicesWastedRowChangeEventHandler tbl_invoicesWastedRowDeleting;
            
            public event tbl_invoicesWastedRowChangeEventHandler tbl_invoicesWastedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtbl_invoicesWastedRow(tbl_invoicesWastedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesWastedRow Addtbl_invoicesWastedRow(int invoiceWasted_id, tbl_accDocsRow parenttbl_accDocsRowByFK_tbl_invoicesWasted_tbl_accDocs1, string invoiceWasted_date, long invoiceWasted_totalPrice, string invoiceWasted_comment, bool invoiceWasted_deleted) {
                tbl_invoicesWastedRow rowtbl_invoicesWastedRow = ((tbl_invoicesWastedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        invoiceWasted_id,
                        null,
                        invoiceWasted_date,
                        invoiceWasted_totalPrice,
                        invoiceWasted_comment,
                        invoiceWasted_deleted};
                if ((parenttbl_accDocsRowByFK_tbl_invoicesWasted_tbl_accDocs1 != null)) {
                    columnValuesArray[1] = parenttbl_accDocsRowByFK_tbl_invoicesWasted_tbl_accDocs1[0];
                }
                rowtbl_invoicesWastedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbl_invoicesWastedRow);
                return rowtbl_invoicesWastedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesWastedRow FindByinvoiceWasted_id(int invoiceWasted_id) {
                return ((tbl_invoicesWastedRow)(this.Rows.Find(new object[] {
                            invoiceWasted_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbl_invoicesWastedDataTable cln = ((tbl_invoicesWastedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbl_invoicesWastedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columninvoiceWasted_id = base.Columns["invoiceWasted_id"];
                this.columnaccDoc_id = base.Columns["accDoc_id"];
                this.columninvoiceWasted_date = base.Columns["invoiceWasted_date"];
                this.columninvoiceWasted_totalPrice = base.Columns["invoiceWasted_totalPrice"];
                this.columninvoiceWasted_comment = base.Columns["invoiceWasted_comment"];
                this.columninvoiceWasted_deleted = base.Columns["invoiceWasted_deleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columninvoiceWasted_id = new global::System.Data.DataColumn("invoiceWasted_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceWasted_id);
                this.columnaccDoc_id = new global::System.Data.DataColumn("accDoc_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccDoc_id);
                this.columninvoiceWasted_date = new global::System.Data.DataColumn("invoiceWasted_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceWasted_date);
                this.columninvoiceWasted_totalPrice = new global::System.Data.DataColumn("invoiceWasted_totalPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceWasted_totalPrice);
                this.columninvoiceWasted_comment = new global::System.Data.DataColumn("invoiceWasted_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceWasted_comment);
                this.columninvoiceWasted_deleted = new global::System.Data.DataColumn("invoiceWasted_deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceWasted_deleted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columninvoiceWasted_id}, true));
                this.columninvoiceWasted_id.AllowDBNull = false;
                this.columninvoiceWasted_id.Unique = true;
                this.columnaccDoc_id.AllowDBNull = false;
                this.columninvoiceWasted_date.AllowDBNull = false;
                this.columninvoiceWasted_date.MaxLength = 10;
                this.columninvoiceWasted_totalPrice.AllowDBNull = false;
                this.columninvoiceWasted_comment.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesWastedRow Newtbl_invoicesWastedRow() {
                return ((tbl_invoicesWastedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbl_invoicesWastedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbl_invoicesWastedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbl_invoicesWastedRowChanged != null)) {
                    this.tbl_invoicesWastedRowChanged(this, new tbl_invoicesWastedRowChangeEvent(((tbl_invoicesWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbl_invoicesWastedRowChanging != null)) {
                    this.tbl_invoicesWastedRowChanging(this, new tbl_invoicesWastedRowChangeEvent(((tbl_invoicesWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbl_invoicesWastedRowDeleted != null)) {
                    this.tbl_invoicesWastedRowDeleted(this, new tbl_invoicesWastedRowChangeEvent(((tbl_invoicesWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbl_invoicesWastedRowDeleting != null)) {
                    this.tbl_invoicesWastedRowDeleting(this, new tbl_invoicesWastedRowChangeEvent(((tbl_invoicesWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetbl_invoicesWastedRow(tbl_invoicesWastedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_wastedInvoices ds = new ds_wastedInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbl_invoicesWastedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tbl_itemsWastedDataTable : global::System.Data.TypedTableBase<tbl_itemsWastedRow> {
            
            private global::System.Data.DataColumn columnitemWasted_id;
            
            private global::System.Data.DataColumn columninvoiceWasted_id;
            
            private global::System.Data.DataColumn columnobject_id;
            
            private global::System.Data.DataColumn columnitemWasted_unitCount;
            
            private global::System.Data.DataColumn columnitemWasted_retailCount;
            
            private global::System.Data.DataColumn columnitemWasted_retailPrice;
            
            private global::System.Data.DataColumn columnitemWasted_comment;
            
            private global::System.Data.DataColumn columnitemWasted_deleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsWastedDataTable() {
                this.TableName = "tbl_itemsWasted";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_itemsWastedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tbl_itemsWastedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemWasted_idColumn {
                get {
                    return this.columnitemWasted_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceWasted_idColumn {
                get {
                    return this.columninvoiceWasted_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn object_idColumn {
                get {
                    return this.columnobject_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemWasted_unitCountColumn {
                get {
                    return this.columnitemWasted_unitCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemWasted_retailCountColumn {
                get {
                    return this.columnitemWasted_retailCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemWasted_retailPriceColumn {
                get {
                    return this.columnitemWasted_retailPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemWasted_commentColumn {
                get {
                    return this.columnitemWasted_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemWasted_deletedColumn {
                get {
                    return this.columnitemWasted_deleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsWastedRow this[int index] {
                get {
                    return ((tbl_itemsWastedRow)(this.Rows[index]));
                }
            }
            
            public event tbl_itemsWastedRowChangeEventHandler tbl_itemsWastedRowChanging;
            
            public event tbl_itemsWastedRowChangeEventHandler tbl_itemsWastedRowChanged;
            
            public event tbl_itemsWastedRowChangeEventHandler tbl_itemsWastedRowDeleting;
            
            public event tbl_itemsWastedRowChangeEventHandler tbl_itemsWastedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtbl_itemsWastedRow(tbl_itemsWastedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsWastedRow Addtbl_itemsWastedRow(tbl_invoicesWastedRow parenttbl_invoicesWastedRowByFK_tbl_itemsWasted_tbl_invoicesWasted, int object_id, int itemWasted_unitCount, int itemWasted_retailCount, long itemWasted_retailPrice, string itemWasted_comment, bool itemWasted_deleted) {
                tbl_itemsWastedRow rowtbl_itemsWastedRow = ((tbl_itemsWastedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        object_id,
                        itemWasted_unitCount,
                        itemWasted_retailCount,
                        itemWasted_retailPrice,
                        itemWasted_comment,
                        itemWasted_deleted};
                if ((parenttbl_invoicesWastedRowByFK_tbl_itemsWasted_tbl_invoicesWasted != null)) {
                    columnValuesArray[1] = parenttbl_invoicesWastedRowByFK_tbl_itemsWasted_tbl_invoicesWasted[0];
                }
                rowtbl_itemsWastedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtbl_itemsWastedRow);
                return rowtbl_itemsWastedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsWastedRow FindByitemWasted_id(int itemWasted_id) {
                return ((tbl_itemsWastedRow)(this.Rows.Find(new object[] {
                            itemWasted_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tbl_itemsWastedDataTable cln = ((tbl_itemsWastedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tbl_itemsWastedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnitemWasted_id = base.Columns["itemWasted_id"];
                this.columninvoiceWasted_id = base.Columns["invoiceWasted_id"];
                this.columnobject_id = base.Columns["object_id"];
                this.columnitemWasted_unitCount = base.Columns["itemWasted_unitCount"];
                this.columnitemWasted_retailCount = base.Columns["itemWasted_retailCount"];
                this.columnitemWasted_retailPrice = base.Columns["itemWasted_retailPrice"];
                this.columnitemWasted_comment = base.Columns["itemWasted_comment"];
                this.columnitemWasted_deleted = base.Columns["itemWasted_deleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnitemWasted_id = new global::System.Data.DataColumn("itemWasted_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemWasted_id);
                this.columninvoiceWasted_id = new global::System.Data.DataColumn("invoiceWasted_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceWasted_id);
                this.columnobject_id = new global::System.Data.DataColumn("object_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_id);
                this.columnitemWasted_unitCount = new global::System.Data.DataColumn("itemWasted_unitCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemWasted_unitCount);
                this.columnitemWasted_retailCount = new global::System.Data.DataColumn("itemWasted_retailCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemWasted_retailCount);
                this.columnitemWasted_retailPrice = new global::System.Data.DataColumn("itemWasted_retailPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemWasted_retailPrice);
                this.columnitemWasted_comment = new global::System.Data.DataColumn("itemWasted_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemWasted_comment);
                this.columnitemWasted_deleted = new global::System.Data.DataColumn("itemWasted_deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemWasted_deleted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnitemWasted_id}, true));
                this.columnitemWasted_id.AutoIncrement = true;
                this.columnitemWasted_id.AutoIncrementSeed = -1;
                this.columnitemWasted_id.AutoIncrementStep = -1;
                this.columnitemWasted_id.AllowDBNull = false;
                this.columnitemWasted_id.ReadOnly = true;
                this.columnitemWasted_id.Unique = true;
                this.columninvoiceWasted_id.AllowDBNull = false;
                this.columnobject_id.AllowDBNull = false;
                this.columnitemWasted_unitCount.AllowDBNull = false;
                this.columnitemWasted_retailCount.AllowDBNull = false;
                this.columnitemWasted_retailPrice.AllowDBNull = false;
                this.columnitemWasted_comment.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsWastedRow Newtbl_itemsWastedRow() {
                return ((tbl_itemsWastedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tbl_itemsWastedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tbl_itemsWastedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbl_itemsWastedRowChanged != null)) {
                    this.tbl_itemsWastedRowChanged(this, new tbl_itemsWastedRowChangeEvent(((tbl_itemsWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbl_itemsWastedRowChanging != null)) {
                    this.tbl_itemsWastedRowChanging(this, new tbl_itemsWastedRowChangeEvent(((tbl_itemsWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbl_itemsWastedRowDeleted != null)) {
                    this.tbl_itemsWastedRowDeleted(this, new tbl_itemsWastedRowChangeEvent(((tbl_itemsWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbl_itemsWastedRowDeleting != null)) {
                    this.tbl_itemsWastedRowDeleting(this, new tbl_itemsWastedRowChangeEvent(((tbl_itemsWastedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetbl_itemsWastedRow(tbl_itemsWastedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_wastedInvoices ds = new ds_wastedInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tbl_itemsWastedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbl_accDocsRow : global::System.Data.DataRow {
            
            private tbl_accDocsDataTable tabletbl_accDocs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_accDocsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbl_accDocs = ((tbl_accDocsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int accDoc_id {
                get {
                    return ((int)(this[this.tabletbl_accDocs.accDoc_idColumn]));
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long accDoc_price {
                get {
                    return ((long)(this[this.tabletbl_accDocs.accDoc_priceColumn]));
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accDoc_date {
                get {
                    return ((string)(this[this.tabletbl_accDocs.accDoc_dateColumn]));
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string accDoc_comment {
                get {
                    try {
                        return ((string)(this[this.tabletbl_accDocs.accDoc_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accDoc_comment\' in table \'tbl_accDocs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool accDoc_isItPerm {
                get {
                    return ((bool)(this[this.tabletbl_accDocs.accDoc_isItPermColumn]));
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_isItPermColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool accDoc_deleted {
                get {
                    try {
                        return ((bool)(this[this.tabletbl_accDocs.accDoc_deletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'accDoc_deleted\' in table \'tbl_accDocs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_accDocs.accDoc_deletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccDoc_commentNull() {
                return this.IsNull(this.tabletbl_accDocs.accDoc_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccDoc_commentNull() {
                this[this.tabletbl_accDocs.accDoc_commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccDoc_deletedNull() {
                return this.IsNull(this.tabletbl_accDocs.accDoc_deletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccDoc_deletedNull() {
                this[this.tabletbl_accDocs.accDoc_deletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesWastedRow[] Gettbl_invoicesWastedRows() {
                if ((this.Table.ChildRelations["FK_tbl_invoicesWasted_tbl_accDocs1"] == null)) {
                    return new tbl_invoicesWastedRow[0];
                }
                else {
                    return ((tbl_invoicesWastedRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tbl_invoicesWasted_tbl_accDocs1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class viw_itemsWastedRow : global::System.Data.DataRow {
            
            private viw_itemsWastedDataTable tableviw_itemsWasted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal viw_itemsWastedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableviw_itemsWasted = ((viw_itemsWastedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int invoiceWasted_id {
                get {
                    return ((int)(this[this.tableviw_itemsWasted.invoiceWasted_idColumn]));
                }
                set {
                    this[this.tableviw_itemsWasted.invoiceWasted_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string objectTitle {
                get {
                    try {
                        return ((string)(this[this.tableviw_itemsWasted.objectTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'objectTitle\' in table \'viw_itemsWasted\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviw_itemsWasted.objectTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string objectUnit_title {
                get {
                    return ((string)(this[this.tableviw_itemsWasted.objectUnit_titleColumn]));
                }
                set {
                    this[this.tableviw_itemsWasted.objectUnit_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int itemWasted_unitCount {
                get {
                    return ((int)(this[this.tableviw_itemsWasted.itemWasted_unitCountColumn]));
                }
                set {
                    this[this.tableviw_itemsWasted.itemWasted_unitCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int itemWasted_retailCount {
                get {
                    return ((int)(this[this.tableviw_itemsWasted.itemWasted_retailCountColumn]));
                }
                set {
                    this[this.tableviw_itemsWasted.itemWasted_retailCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int objectTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableviw_itemsWasted.objectTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'objectTotalCount\' in table \'viw_itemsWasted\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviw_itemsWasted.objectTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int object_retailInUnit {
                get {
                    return ((int)(this[this.tableviw_itemsWasted.object_retailInUnitColumn]));
                }
                set {
                    this[this.tableviw_itemsWasted.object_retailInUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long itemWasted_retailPrice {
                get {
                    return ((long)(this[this.tableviw_itemsWasted.itemWasted_retailPriceColumn]));
                }
                set {
                    this[this.tableviw_itemsWasted.itemWasted_retailPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long objectTotalPrice {
                get {
                    try {
                        return ((long)(this[this.tableviw_itemsWasted.objectTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'objectTotalPrice\' in table \'viw_itemsWasted\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviw_itemsWasted.objectTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string itemWasted_comment {
                get {
                    try {
                        return ((string)(this[this.tableviw_itemsWasted.itemWasted_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'itemWasted_comment\' in table \'viw_itemsWasted\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviw_itemsWasted.itemWasted_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjectTitleNull() {
                return this.IsNull(this.tableviw_itemsWasted.objectTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjectTitleNull() {
                this[this.tableviw_itemsWasted.objectTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjectTotalCountNull() {
                return this.IsNull(this.tableviw_itemsWasted.objectTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjectTotalCountNull() {
                this[this.tableviw_itemsWasted.objectTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjectTotalPriceNull() {
                return this.IsNull(this.tableviw_itemsWasted.objectTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjectTotalPriceNull() {
                this[this.tableviw_itemsWasted.objectTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemWasted_commentNull() {
                return this.IsNull(this.tableviw_itemsWasted.itemWasted_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemWasted_commentNull() {
                this[this.tableviw_itemsWasted.itemWasted_commentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbl_invoicesWastedRow : global::System.Data.DataRow {
            
            private tbl_invoicesWastedDataTable tabletbl_invoicesWasted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_invoicesWastedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbl_invoicesWasted = ((tbl_invoicesWastedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int invoiceWasted_id {
                get {
                    return ((int)(this[this.tabletbl_invoicesWasted.invoiceWasted_idColumn]));
                }
                set {
                    this[this.tabletbl_invoicesWasted.invoiceWasted_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int accDoc_id {
                get {
                    return ((int)(this[this.tabletbl_invoicesWasted.accDoc_idColumn]));
                }
                set {
                    this[this.tabletbl_invoicesWasted.accDoc_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string invoiceWasted_date {
                get {
                    return ((string)(this[this.tabletbl_invoicesWasted.invoiceWasted_dateColumn]));
                }
                set {
                    this[this.tabletbl_invoicesWasted.invoiceWasted_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long invoiceWasted_totalPrice {
                get {
                    return ((long)(this[this.tabletbl_invoicesWasted.invoiceWasted_totalPriceColumn]));
                }
                set {
                    this[this.tabletbl_invoicesWasted.invoiceWasted_totalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string invoiceWasted_comment {
                get {
                    try {
                        return ((string)(this[this.tabletbl_invoicesWasted.invoiceWasted_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoiceWasted_comment\' in table \'tbl_invoicesWasted\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabletbl_invoicesWasted.invoiceWasted_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool invoiceWasted_deleted {
                get {
                    try {
                        return ((bool)(this[this.tabletbl_invoicesWasted.invoiceWasted_deletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoiceWasted_deleted\' in table \'tbl_invoicesWasted\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabletbl_invoicesWasted.invoiceWasted_deletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow tbl_accDocsRow {
                get {
                    return ((tbl_accDocsRow)(this.GetParentRow(this.Table.ParentRelations["FK_tbl_invoicesWasted_tbl_accDocs1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tbl_invoicesWasted_tbl_accDocs1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinvoiceWasted_commentNull() {
                return this.IsNull(this.tabletbl_invoicesWasted.invoiceWasted_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinvoiceWasted_commentNull() {
                this[this.tabletbl_invoicesWasted.invoiceWasted_commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinvoiceWasted_deletedNull() {
                return this.IsNull(this.tabletbl_invoicesWasted.invoiceWasted_deletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinvoiceWasted_deletedNull() {
                this[this.tabletbl_invoicesWasted.invoiceWasted_deletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsWastedRow[] Gettbl_itemsWastedRows() {
                if ((this.Table.ChildRelations["FK_tbl_itemsWasted_tbl_invoicesWasted"] == null)) {
                    return new tbl_itemsWastedRow[0];
                }
                else {
                    return ((tbl_itemsWastedRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tbl_itemsWasted_tbl_invoicesWasted"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tbl_itemsWastedRow : global::System.Data.DataRow {
            
            private tbl_itemsWastedDataTable tabletbl_itemsWasted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tbl_itemsWastedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbl_itemsWasted = ((tbl_itemsWastedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int itemWasted_id {
                get {
                    return ((int)(this[this.tabletbl_itemsWasted.itemWasted_idColumn]));
                }
                set {
                    this[this.tabletbl_itemsWasted.itemWasted_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int invoiceWasted_id {
                get {
                    return ((int)(this[this.tabletbl_itemsWasted.invoiceWasted_idColumn]));
                }
                set {
                    this[this.tabletbl_itemsWasted.invoiceWasted_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int object_id {
                get {
                    return ((int)(this[this.tabletbl_itemsWasted.object_idColumn]));
                }
                set {
                    this[this.tabletbl_itemsWasted.object_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int itemWasted_unitCount {
                get {
                    return ((int)(this[this.tabletbl_itemsWasted.itemWasted_unitCountColumn]));
                }
                set {
                    this[this.tabletbl_itemsWasted.itemWasted_unitCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int itemWasted_retailCount {
                get {
                    return ((int)(this[this.tabletbl_itemsWasted.itemWasted_retailCountColumn]));
                }
                set {
                    this[this.tabletbl_itemsWasted.itemWasted_retailCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long itemWasted_retailPrice {
                get {
                    return ((long)(this[this.tabletbl_itemsWasted.itemWasted_retailPriceColumn]));
                }
                set {
                    this[this.tabletbl_itemsWasted.itemWasted_retailPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string itemWasted_comment {
                get {
                    try {
                        return ((string)(this[this.tabletbl_itemsWasted.itemWasted_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'itemWasted_comment\' in table \'tbl_itemsWasted\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_itemsWasted.itemWasted_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool itemWasted_deleted {
                get {
                    try {
                        return ((bool)(this[this.tabletbl_itemsWasted.itemWasted_deletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'itemWasted_deleted\' in table \'tbl_itemsWasted\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbl_itemsWasted.itemWasted_deletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesWastedRow tbl_invoicesWastedRow {
                get {
                    return ((tbl_invoicesWastedRow)(this.GetParentRow(this.Table.ParentRelations["FK_tbl_itemsWasted_tbl_invoicesWasted"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tbl_itemsWasted_tbl_invoicesWasted"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemWasted_commentNull() {
                return this.IsNull(this.tabletbl_itemsWasted.itemWasted_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemWasted_commentNull() {
                this[this.tabletbl_itemsWasted.itemWasted_commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemWasted_deletedNull() {
                return this.IsNull(this.tabletbl_itemsWasted.itemWasted_deletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemWasted_deletedNull() {
                this[this.tabletbl_itemsWasted.itemWasted_deletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbl_accDocsRowChangeEvent : global::System.EventArgs {
            
            private tbl_accDocsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRowChangeEvent(tbl_accDocsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_accDocsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class viw_itemsWastedRowChangeEvent : global::System.EventArgs {
            
            private viw_itemsWastedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsWastedRowChangeEvent(viw_itemsWastedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public viw_itemsWastedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbl_invoicesWastedRowChangeEvent : global::System.EventArgs {
            
            private tbl_invoicesWastedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesWastedRowChangeEvent(tbl_invoicesWastedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_invoicesWastedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tbl_itemsWastedRowChangeEvent : global::System.EventArgs {
            
            private tbl_itemsWastedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsWastedRowChangeEvent(tbl_itemsWastedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tbl_itemsWastedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Novin.ds_wastedInvoicesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbl_accDocsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tbl_accDocsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbl_accDocs";
            tableMapping.ColumnMappings.Add("accDoc_id", "accDoc_id");
            tableMapping.ColumnMappings.Add("accDoc_price", "accDoc_price");
            tableMapping.ColumnMappings.Add("accDoc_date", "accDoc_date");
            tableMapping.ColumnMappings.Add("accDoc_comment", "accDoc_comment");
            tableMapping.ColumnMappings.Add("accDoc_isItPerm", "accDoc_isItPerm");
            tableMapping.ColumnMappings.Add("accDoc_deleted", "accDoc_deleted");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tbl_accDocs] WHERE (([accDoc_id] = @Original_accDoc_id) AND ([accDoc_price] = @Original_accDoc_price) AND ([accDoc_date] = @Original_accDoc_date) AND ((@IsNull_accDoc_comment = 1 AND [accDoc_comment] IS NULL) OR ([accDoc_comment] = @Original_accDoc_comment)) AND ([accDoc_isItPerm] = @Original_accDoc_isItPerm) AND ((@IsNull_accDoc_deleted = 1 AND [accDoc_deleted] IS NULL) OR ([accDoc_deleted] = @Original_accDoc_deleted)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_price", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_accDoc_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_isItPerm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_isItPerm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_accDoc_deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tbl_accDocs] ([accDoc_id], [accDoc_price], [accDoc_date], [accDoc_comment], [accDoc_isItPerm], [accDoc_deleted]) VALUES (@accDoc_id, @accDoc_price, @accDoc_date, @accDoc_comment, @accDoc_isItPerm, @accDoc_deleted);
SELECT accDoc_id, accDoc_price, accDoc_date, accDoc_comment, accDoc_isItPerm, accDoc_deleted FROM tbl_accDocs WHERE (accDoc_id = @accDoc_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_price", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_isItPerm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_isItPerm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tbl_accDocs] SET [accDoc_id] = @accDoc_id, [accDoc_price] = @accDoc_price, [accDoc_date] = @accDoc_date, [accDoc_comment] = @accDoc_comment, [accDoc_isItPerm] = @accDoc_isItPerm, [accDoc_deleted] = @accDoc_deleted WHERE (([accDoc_id] = @Original_accDoc_id) AND ([accDoc_price] = @Original_accDoc_price) AND ([accDoc_date] = @Original_accDoc_date) AND ((@IsNull_accDoc_comment = 1 AND [accDoc_comment] IS NULL) OR ([accDoc_comment] = @Original_accDoc_comment)) AND ([accDoc_isItPerm] = @Original_accDoc_isItPerm) AND ((@IsNull_accDoc_deleted = 1 AND [accDoc_deleted] IS NULL) OR ([accDoc_deleted] = @Original_accDoc_deleted)));
SELECT accDoc_id, accDoc_price, accDoc_date, accDoc_comment, accDoc_isItPerm, accDoc_deleted FROM tbl_accDocs WHERE (accDoc_id = @accDoc_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_price", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_isItPerm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_isItPerm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_price", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_accDoc_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_isItPerm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_isItPerm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_accDoc_deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT accDoc_id, accDoc_price, accDoc_date, accDoc_comment, accDoc_isItPerm, acc" +
                "Doc_deleted FROM tbl_accDocs";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_wastedInvoices.tbl_accDocsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_wastedInvoices.tbl_accDocsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_wastedInvoices.tbl_accDocsDataTable dataTable = new ds_wastedInvoices.tbl_accDocsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_wastedInvoices.tbl_accDocsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_wastedInvoices dataSet) {
            return this.Adapter.Update(dataSet, "tbl_accDocs");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_accDoc_id, long Original_accDoc_price, string Original_accDoc_date, string Original_accDoc_comment, bool Original_accDoc_isItPerm, global::System.Nullable<bool> Original_accDoc_deleted) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_accDoc_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_accDoc_price));
            if ((Original_accDoc_date == null)) {
                throw new global::System.ArgumentNullException("Original_accDoc_date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_accDoc_date));
            }
            if ((Original_accDoc_comment == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_accDoc_comment));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_accDoc_isItPerm));
            if ((Original_accDoc_deleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_accDoc_deleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int accDoc_id, long accDoc_price, string accDoc_date, string accDoc_comment, bool accDoc_isItPerm, global::System.Nullable<bool> accDoc_deleted) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(accDoc_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(accDoc_price));
            if ((accDoc_date == null)) {
                throw new global::System.ArgumentNullException("accDoc_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(accDoc_date));
            }
            if ((accDoc_comment == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(accDoc_comment));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(accDoc_isItPerm));
            if ((accDoc_deleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(accDoc_deleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int accDoc_id, long accDoc_price, string accDoc_date, string accDoc_comment, bool accDoc_isItPerm, global::System.Nullable<bool> accDoc_deleted, int Original_accDoc_id, long Original_accDoc_price, string Original_accDoc_date, string Original_accDoc_comment, bool Original_accDoc_isItPerm, global::System.Nullable<bool> Original_accDoc_deleted) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(accDoc_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(accDoc_price));
            if ((accDoc_date == null)) {
                throw new global::System.ArgumentNullException("accDoc_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(accDoc_date));
            }
            if ((accDoc_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(accDoc_comment));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(accDoc_isItPerm));
            if ((accDoc_deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(accDoc_deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_accDoc_id));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_accDoc_price));
            if ((Original_accDoc_date == null)) {
                throw new global::System.ArgumentNullException("Original_accDoc_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_accDoc_date));
            }
            if ((Original_accDoc_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_accDoc_comment));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Original_accDoc_isItPerm));
            if ((Original_accDoc_deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Original_accDoc_deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long accDoc_price, string accDoc_date, string accDoc_comment, bool accDoc_isItPerm, global::System.Nullable<bool> accDoc_deleted, int Original_accDoc_id, long Original_accDoc_price, string Original_accDoc_date, string Original_accDoc_comment, bool Original_accDoc_isItPerm, global::System.Nullable<bool> Original_accDoc_deleted) {
            return this.Update(Original_accDoc_id, accDoc_price, accDoc_date, accDoc_comment, accDoc_isItPerm, accDoc_deleted, Original_accDoc_id, Original_accDoc_price, Original_accDoc_date, Original_accDoc_comment, Original_accDoc_isItPerm, Original_accDoc_deleted);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class viw_itemsWastedTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public viw_itemsWastedTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "viw_itemsWasted";
            tableMapping.ColumnMappings.Add("invoiceWasted_id", "invoiceWasted_id");
            tableMapping.ColumnMappings.Add("objectTitle", "objectTitle");
            tableMapping.ColumnMappings.Add("objectUnit_title", "objectUnit_title");
            tableMapping.ColumnMappings.Add("itemWasted_unitCount", "itemWasted_unitCount");
            tableMapping.ColumnMappings.Add("itemWasted_retailCount", "itemWasted_retailCount");
            tableMapping.ColumnMappings.Add("objectTotalCount", "objectTotalCount");
            tableMapping.ColumnMappings.Add("object_retailInUnit", "object_retailInUnit");
            tableMapping.ColumnMappings.Add("itemWasted_retailPrice", "itemWasted_retailPrice");
            tableMapping.ColumnMappings.Add("objectTotalPrice", "objectTotalPrice");
            tableMapping.ColumnMappings.Add("itemWasted_comment", "itemWasted_comment");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        invoiceWasted_id, objectTitle, objectUnit_title, itemWasted_unitCount, itemWasted_retailCount, objectTotalCount, object_retailInUnit, itemWasted_retailPrice, 
                         objectTotalPrice, itemWasted_comment
FROM            viw_itemsWasted
WHERE        (invoiceWasted_id = @invoiceWasted_id)
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        SUM(objectTotalCount) AS invoiceTotalCount\r\nFROM            viw_ite" +
                "msWasted\r\nGROUP BY invoiceWasted_id\r\nHAVING        (invoiceWasted_id = @invoiceW" +
                "asted_id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        SUM(objectTotalPrice) AS invoiceTotalPrice\r\nFROM            viw_ite" +
                "msWasted\r\nGROUP BY invoiceWasted_id\r\nHAVING        (invoiceWasted_id = @invoiceW" +
                "asted_id)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_wastedInvoices.viw_itemsWastedDataTable dataTable, int invoiceWasted_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(invoiceWasted_id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_wastedInvoices.viw_itemsWastedDataTable GetData(int invoiceWasted_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(invoiceWasted_id));
            ds_wastedInvoices.viw_itemsWastedDataTable dataTable = new ds_wastedInvoices.viw_itemsWastedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> getWastedItemsTotalCount(int invoiceWasted_id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(invoiceWasted_id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<long> getWastedItemsTotalPrice(int invoiceWasted_id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(invoiceWasted_id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<long>();
            }
            else {
                return new global::System.Nullable<long>(((long)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbl_invoicesWastedTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tbl_invoicesWastedTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbl_invoicesWasted";
            tableMapping.ColumnMappings.Add("invoiceWasted_id", "invoiceWasted_id");
            tableMapping.ColumnMappings.Add("accDoc_id", "accDoc_id");
            tableMapping.ColumnMappings.Add("invoiceWasted_date", "invoiceWasted_date");
            tableMapping.ColumnMappings.Add("invoiceWasted_totalPrice", "invoiceWasted_totalPrice");
            tableMapping.ColumnMappings.Add("invoiceWasted_comment", "invoiceWasted_comment");
            tableMapping.ColumnMappings.Add("invoiceWasted_deleted", "invoiceWasted_deleted");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tbl_invoicesWasted] WHERE (([invoiceWasted_id] = @Original_invoiceWasted_id) AND ([accDoc_id] = @Original_accDoc_id) AND ([invoiceWasted_date] = @Original_invoiceWasted_date) AND ([invoiceWasted_totalPrice] = @Original_invoiceWasted_totalPrice) AND ((@IsNull_invoiceWasted_comment = 1 AND [invoiceWasted_comment] IS NULL) OR ([invoiceWasted_comment] = @Original_invoiceWasted_comment)) AND ((@IsNull_invoiceWasted_deleted = 1 AND [invoiceWasted_deleted] IS NULL) OR ([invoiceWasted_deleted] = @Original_invoiceWasted_deleted)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_totalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_invoiceWasted_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_invoiceWasted_deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tbl_invoicesWasted] ([invoiceWasted_id], [accDoc_id], [invoiceWasted_date], [invoiceWasted_totalPrice], [invoiceWasted_comment], [invoiceWasted_deleted]) VALUES (@invoiceWasted_id, @accDoc_id, @invoiceWasted_date, @invoiceWasted_totalPrice, @invoiceWasted_comment, @invoiceWasted_deleted);
SELECT invoiceWasted_id, accDoc_id, invoiceWasted_date, invoiceWasted_totalPrice, invoiceWasted_comment, invoiceWasted_deleted FROM tbl_invoicesWasted WHERE (invoiceWasted_id = @invoiceWasted_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_totalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tbl_invoicesWasted] SET [invoiceWasted_id] = @invoiceWasted_id, [accDoc_id] = @accDoc_id, [invoiceWasted_date] = @invoiceWasted_date, [invoiceWasted_totalPrice] = @invoiceWasted_totalPrice, [invoiceWasted_comment] = @invoiceWasted_comment, [invoiceWasted_deleted] = @invoiceWasted_deleted WHERE (([invoiceWasted_id] = @Original_invoiceWasted_id) AND ([accDoc_id] = @Original_accDoc_id) AND ([invoiceWasted_date] = @Original_invoiceWasted_date) AND ([invoiceWasted_totalPrice] = @Original_invoiceWasted_totalPrice) AND ((@IsNull_invoiceWasted_comment = 1 AND [invoiceWasted_comment] IS NULL) OR ([invoiceWasted_comment] = @Original_invoiceWasted_comment)) AND ((@IsNull_invoiceWasted_deleted = 1 AND [invoiceWasted_deleted] IS NULL) OR ([invoiceWasted_deleted] = @Original_invoiceWasted_deleted)));
SELECT invoiceWasted_id, accDoc_id, invoiceWasted_date, invoiceWasted_totalPrice, invoiceWasted_comment, invoiceWasted_deleted FROM tbl_invoicesWasted WHERE (invoiceWasted_id = @invoiceWasted_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_totalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accDoc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accDoc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_totalPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_totalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_invoiceWasted_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_invoiceWasted_deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT invoiceWasted_id, accDoc_id, invoiceWasted_date, invoiceWasted_totalPrice," +
                " invoiceWasted_comment, invoiceWasted_deleted FROM tbl_invoicesWasted WHERE (inv" +
                "oiceWasted_id = @invoiceWasted_id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_wastedInvoices.tbl_invoicesWastedDataTable dataTable, int invoiceWasted_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(invoiceWasted_id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_wastedInvoices.tbl_invoicesWastedDataTable GetData(int invoiceWasted_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(invoiceWasted_id));
            ds_wastedInvoices.tbl_invoicesWastedDataTable dataTable = new ds_wastedInvoices.tbl_invoicesWastedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_wastedInvoices.tbl_invoicesWastedDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_wastedInvoices dataSet) {
            return this.Adapter.Update(dataSet, "tbl_invoicesWasted");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_invoiceWasted_id, int Original_accDoc_id, string Original_invoiceWasted_date, long Original_invoiceWasted_totalPrice, string Original_invoiceWasted_comment, global::System.Nullable<bool> Original_invoiceWasted_deleted) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_invoiceWasted_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_accDoc_id));
            if ((Original_invoiceWasted_date == null)) {
                throw new global::System.ArgumentNullException("Original_invoiceWasted_date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_invoiceWasted_date));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_invoiceWasted_totalPrice));
            if ((Original_invoiceWasted_comment == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_invoiceWasted_comment));
            }
            if ((Original_invoiceWasted_deleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_invoiceWasted_deleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int invoiceWasted_id, int accDoc_id, string invoiceWasted_date, long invoiceWasted_totalPrice, string invoiceWasted_comment, global::System.Nullable<bool> invoiceWasted_deleted) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(invoiceWasted_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(accDoc_id));
            if ((invoiceWasted_date == null)) {
                throw new global::System.ArgumentNullException("invoiceWasted_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(invoiceWasted_date));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(invoiceWasted_totalPrice));
            if ((invoiceWasted_comment == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(invoiceWasted_comment));
            }
            if ((invoiceWasted_deleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(invoiceWasted_deleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int invoiceWasted_id, int accDoc_id, string invoiceWasted_date, long invoiceWasted_totalPrice, string invoiceWasted_comment, global::System.Nullable<bool> invoiceWasted_deleted, int Original_invoiceWasted_id, int Original_accDoc_id, string Original_invoiceWasted_date, long Original_invoiceWasted_totalPrice, string Original_invoiceWasted_comment, global::System.Nullable<bool> Original_invoiceWasted_deleted) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(invoiceWasted_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(accDoc_id));
            if ((invoiceWasted_date == null)) {
                throw new global::System.ArgumentNullException("invoiceWasted_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(invoiceWasted_date));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(invoiceWasted_totalPrice));
            if ((invoiceWasted_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(invoiceWasted_comment));
            }
            if ((invoiceWasted_deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(invoiceWasted_deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_invoiceWasted_id));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_accDoc_id));
            if ((Original_invoiceWasted_date == null)) {
                throw new global::System.ArgumentNullException("Original_invoiceWasted_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_invoiceWasted_date));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_invoiceWasted_totalPrice));
            if ((Original_invoiceWasted_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_invoiceWasted_comment));
            }
            if ((Original_invoiceWasted_deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Original_invoiceWasted_deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int accDoc_id, string invoiceWasted_date, long invoiceWasted_totalPrice, string invoiceWasted_comment, global::System.Nullable<bool> invoiceWasted_deleted, int Original_invoiceWasted_id, int Original_accDoc_id, string Original_invoiceWasted_date, long Original_invoiceWasted_totalPrice, string Original_invoiceWasted_comment, global::System.Nullable<bool> Original_invoiceWasted_deleted) {
            return this.Update(Original_invoiceWasted_id, accDoc_id, invoiceWasted_date, invoiceWasted_totalPrice, invoiceWasted_comment, invoiceWasted_deleted, Original_invoiceWasted_id, Original_accDoc_id, Original_invoiceWasted_date, Original_invoiceWasted_totalPrice, Original_invoiceWasted_comment, Original_invoiceWasted_deleted);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tbl_itemsWastedTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tbl_itemsWastedTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tbl_itemsWasted";
            tableMapping.ColumnMappings.Add("itemWasted_id", "itemWasted_id");
            tableMapping.ColumnMappings.Add("invoiceWasted_id", "invoiceWasted_id");
            tableMapping.ColumnMappings.Add("object_id", "object_id");
            tableMapping.ColumnMappings.Add("itemWasted_unitCount", "itemWasted_unitCount");
            tableMapping.ColumnMappings.Add("itemWasted_retailCount", "itemWasted_retailCount");
            tableMapping.ColumnMappings.Add("itemWasted_retailPrice", "itemWasted_retailPrice");
            tableMapping.ColumnMappings.Add("itemWasted_comment", "itemWasted_comment");
            tableMapping.ColumnMappings.Add("itemWasted_deleted", "itemWasted_deleted");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tbl_itemsWasted] WHERE (([itemWasted_id] = @Original_itemWasted_id) AND ([invoiceWasted_id] = @Original_invoiceWasted_id) AND ([object_id] = @Original_object_id) AND ([itemWasted_unitCount] = @Original_itemWasted_unitCount) AND ([itemWasted_retailCount] = @Original_itemWasted_retailCount) AND ([itemWasted_retailPrice] = @Original_itemWasted_retailPrice) AND ((@IsNull_itemWasted_comment = 1 AND [itemWasted_comment] IS NULL) OR ([itemWasted_comment] = @Original_itemWasted_comment)) AND ((@IsNull_itemWasted_deleted = 1 AND [itemWasted_deleted] IS NULL) OR ([itemWasted_deleted] = @Original_itemWasted_deleted)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_unitCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_retailCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_retailCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_retailPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_retailPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_itemWasted_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_itemWasted_deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tbl_itemsWasted] ([invoiceWasted_id], [object_id], [itemWasted_unitCount], [itemWasted_retailCount], [itemWasted_retailPrice], [itemWasted_comment], [itemWasted_deleted]) VALUES (@invoiceWasted_id, @object_id, @itemWasted_unitCount, @itemWasted_retailCount, @itemWasted_retailPrice, @itemWasted_comment, @itemWasted_deleted);
SELECT itemWasted_id, invoiceWasted_id, object_id, itemWasted_unitCount, itemWasted_retailCount, itemWasted_retailPrice, itemWasted_comment, itemWasted_deleted FROM tbl_itemsWasted WHERE (itemWasted_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_unitCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_retailCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_retailCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_retailPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_retailPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tbl_itemsWasted] SET [invoiceWasted_id] = @invoiceWasted_id, [object_id] = @object_id, [itemWasted_unitCount] = @itemWasted_unitCount, [itemWasted_retailCount] = @itemWasted_retailCount, [itemWasted_retailPrice] = @itemWasted_retailPrice, [itemWasted_comment] = @itemWasted_comment, [itemWasted_deleted] = @itemWasted_deleted WHERE (([itemWasted_id] = @Original_itemWasted_id) AND ([invoiceWasted_id] = @Original_invoiceWasted_id) AND ([object_id] = @Original_object_id) AND ([itemWasted_unitCount] = @Original_itemWasted_unitCount) AND ([itemWasted_retailCount] = @Original_itemWasted_retailCount) AND ([itemWasted_retailPrice] = @Original_itemWasted_retailPrice) AND ((@IsNull_itemWasted_comment = 1 AND [itemWasted_comment] IS NULL) OR ([itemWasted_comment] = @Original_itemWasted_comment)) AND ((@IsNull_itemWasted_deleted = 1 AND [itemWasted_deleted] IS NULL) OR ([itemWasted_deleted] = @Original_itemWasted_deleted)));
SELECT itemWasted_id, invoiceWasted_id, object_id, itemWasted_unitCount, itemWasted_retailCount, itemWasted_retailPrice, itemWasted_comment, itemWasted_deleted FROM tbl_itemsWasted WHERE (itemWasted_id = @itemWasted_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_unitCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_retailCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_retailCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_retailPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_retailPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_invoiceWasted_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_unitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_unitCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_retailCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_retailCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_retailPrice", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_retailPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_itemWasted_comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_itemWasted_deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_itemWasted_deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemWasted_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "itemWasted_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Novin.Properties.Settings.Default.novinDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT itemWasted_id, invoiceWasted_id, object_id, itemWasted_unitCount, itemWast" +
                "ed_retailCount, itemWasted_retailPrice, itemWasted_comment, itemWasted_deleted F" +
                "ROM tbl_itemsWasted WHERE (invoiceWasted_id = @invoiceWasted_id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invoiceWasted_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "invoiceWasted_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_wastedInvoices.tbl_itemsWastedDataTable dataTable, int invoiceWasted_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(invoiceWasted_id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_wastedInvoices.tbl_itemsWastedDataTable GetData(int invoiceWasted_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(invoiceWasted_id));
            ds_wastedInvoices.tbl_itemsWastedDataTable dataTable = new ds_wastedInvoices.tbl_itemsWastedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_wastedInvoices.tbl_itemsWastedDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_wastedInvoices dataSet) {
            return this.Adapter.Update(dataSet, "tbl_itemsWasted");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_itemWasted_id, int Original_invoiceWasted_id, int Original_object_id, int Original_itemWasted_unitCount, int Original_itemWasted_retailCount, long Original_itemWasted_retailPrice, string Original_itemWasted_comment, global::System.Nullable<bool> Original_itemWasted_deleted) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_itemWasted_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_invoiceWasted_id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_object_id));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_itemWasted_unitCount));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_itemWasted_retailCount));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_itemWasted_retailPrice));
            if ((Original_itemWasted_comment == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_itemWasted_comment));
            }
            if ((Original_itemWasted_deleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_itemWasted_deleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int invoiceWasted_id, int object_id, int itemWasted_unitCount, int itemWasted_retailCount, long itemWasted_retailPrice, string itemWasted_comment, global::System.Nullable<bool> itemWasted_deleted) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(invoiceWasted_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(object_id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(itemWasted_unitCount));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(itemWasted_retailCount));
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(itemWasted_retailPrice));
            if ((itemWasted_comment == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(itemWasted_comment));
            }
            if ((itemWasted_deleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(itemWasted_deleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int invoiceWasted_id, 
                    int object_id, 
                    int itemWasted_unitCount, 
                    int itemWasted_retailCount, 
                    long itemWasted_retailPrice, 
                    string itemWasted_comment, 
                    global::System.Nullable<bool> itemWasted_deleted, 
                    int Original_itemWasted_id, 
                    int Original_invoiceWasted_id, 
                    int Original_object_id, 
                    int Original_itemWasted_unitCount, 
                    int Original_itemWasted_retailCount, 
                    long Original_itemWasted_retailPrice, 
                    string Original_itemWasted_comment, 
                    global::System.Nullable<bool> Original_itemWasted_deleted, 
                    int itemWasted_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(invoiceWasted_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(object_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(itemWasted_unitCount));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(itemWasted_retailCount));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(itemWasted_retailPrice));
            if ((itemWasted_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(itemWasted_comment));
            }
            if ((itemWasted_deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(itemWasted_deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_itemWasted_id));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_invoiceWasted_id));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_object_id));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_itemWasted_unitCount));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_itemWasted_retailCount));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_itemWasted_retailPrice));
            if ((Original_itemWasted_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_itemWasted_comment));
            }
            if ((Original_itemWasted_deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Original_itemWasted_deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(itemWasted_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int invoiceWasted_id, int object_id, int itemWasted_unitCount, int itemWasted_retailCount, long itemWasted_retailPrice, string itemWasted_comment, global::System.Nullable<bool> itemWasted_deleted, int Original_itemWasted_id, int Original_invoiceWasted_id, int Original_object_id, int Original_itemWasted_unitCount, int Original_itemWasted_retailCount, long Original_itemWasted_retailPrice, string Original_itemWasted_comment, global::System.Nullable<bool> Original_itemWasted_deleted) {
            return this.Update(invoiceWasted_id, object_id, itemWasted_unitCount, itemWasted_retailCount, itemWasted_retailPrice, itemWasted_comment, itemWasted_deleted, Original_itemWasted_id, Original_invoiceWasted_id, Original_object_id, Original_itemWasted_unitCount, Original_itemWasted_retailCount, Original_itemWasted_retailPrice, Original_itemWasted_comment, Original_itemWasted_deleted, Original_itemWasted_id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private tbl_accDocsTableAdapter _tbl_accDocsTableAdapter;
        
        private tbl_invoicesWastedTableAdapter _tbl_invoicesWastedTableAdapter;
        
        private tbl_itemsWastedTableAdapter _tbl_itemsWastedTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tbl_accDocsTableAdapter tbl_accDocsTableAdapter {
            get {
                return this._tbl_accDocsTableAdapter;
            }
            set {
                this._tbl_accDocsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tbl_invoicesWastedTableAdapter tbl_invoicesWastedTableAdapter {
            get {
                return this._tbl_invoicesWastedTableAdapter;
            }
            set {
                this._tbl_invoicesWastedTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tbl_itemsWastedTableAdapter tbl_itemsWastedTableAdapter {
            get {
                return this._tbl_itemsWastedTableAdapter;
            }
            set {
                this._tbl_itemsWastedTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tbl_accDocsTableAdapter != null) 
                            && (this._tbl_accDocsTableAdapter.Connection != null))) {
                    return this._tbl_accDocsTableAdapter.Connection;
                }
                if (((this._tbl_invoicesWastedTableAdapter != null) 
                            && (this._tbl_invoicesWastedTableAdapter.Connection != null))) {
                    return this._tbl_invoicesWastedTableAdapter.Connection;
                }
                if (((this._tbl_itemsWastedTableAdapter != null) 
                            && (this._tbl_itemsWastedTableAdapter.Connection != null))) {
                    return this._tbl_itemsWastedTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tbl_accDocsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tbl_invoicesWastedTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tbl_itemsWastedTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(ds_wastedInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tbl_accDocsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbl_accDocs.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_accDocsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tbl_invoicesWastedTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbl_invoicesWasted.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_invoicesWastedTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tbl_itemsWastedTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tbl_itemsWasted.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_itemsWastedTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(ds_wastedInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tbl_accDocsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbl_accDocs.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_accDocsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tbl_invoicesWastedTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbl_invoicesWasted.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_invoicesWastedTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tbl_itemsWastedTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tbl_itemsWasted.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_itemsWastedTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(ds_wastedInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tbl_itemsWastedTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbl_itemsWasted.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_itemsWastedTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tbl_invoicesWastedTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbl_invoicesWasted.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_invoicesWastedTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tbl_accDocsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tbl_accDocs.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_accDocsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(ds_wastedInvoices dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tbl_accDocsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_accDocsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tbl_invoicesWastedTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_invoicesWastedTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tbl_itemsWastedTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_itemsWastedTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tbl_accDocsTableAdapter != null)) {
                    revertConnections.Add(this._tbl_accDocsTableAdapter, this._tbl_accDocsTableAdapter.Connection);
                    this._tbl_accDocsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_accDocsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_accDocsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_accDocsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_accDocsTableAdapter.Adapter);
                    }
                }
                if ((this._tbl_invoicesWastedTableAdapter != null)) {
                    revertConnections.Add(this._tbl_invoicesWastedTableAdapter, this._tbl_invoicesWastedTableAdapter.Connection);
                    this._tbl_invoicesWastedTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_invoicesWastedTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_invoicesWastedTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_invoicesWastedTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_invoicesWastedTableAdapter.Adapter);
                    }
                }
                if ((this._tbl_itemsWastedTableAdapter != null)) {
                    revertConnections.Add(this._tbl_itemsWastedTableAdapter, this._tbl_itemsWastedTableAdapter.Connection);
                    this._tbl_itemsWastedTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_itemsWastedTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_itemsWastedTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_itemsWastedTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_itemsWastedTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tbl_accDocsTableAdapter != null)) {
                    this._tbl_accDocsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_accDocsTableAdapter]));
                    this._tbl_accDocsTableAdapter.Transaction = null;
                }
                if ((this._tbl_invoicesWastedTableAdapter != null)) {
                    this._tbl_invoicesWastedTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_invoicesWastedTableAdapter]));
                    this._tbl_invoicesWastedTableAdapter.Transaction = null;
                }
                if ((this._tbl_itemsWastedTableAdapter != null)) {
                    this._tbl_itemsWastedTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_itemsWastedTableAdapter]));
                    this._tbl_itemsWastedTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591